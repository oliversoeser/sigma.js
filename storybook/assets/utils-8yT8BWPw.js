import{g as ae}from"./_commonjsHelpers-BosuxZz1.js";var ve={exports:{}},W=typeof Reflect=="object"?Reflect:null,Ge=W&&typeof W.apply=="function"?W.apply:function(e,t,i){return Function.prototype.apply.call(e,t,i)},se;W&&typeof W.ownKeys=="function"?se=W.ownKeys:Object.getOwnPropertySymbols?se=function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:se=function(e){return Object.getOwnPropertyNames(e)};function jt(n){console&&console.warn&&console.warn(n)}var st=Number.isNaN||function(e){return e!==e};function A(){A.init.call(this)}ve.exports=A;ve.exports.once=qt;A.EventEmitter=A;A.prototype._events=void 0;A.prototype._eventsCount=0;A.prototype._maxListeners=void 0;var Ne=10;function he(n){if(typeof n!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof n)}Object.defineProperty(A,"defaultMaxListeners",{enumerable:!0,get:function(){return Ne},set:function(n){if(typeof n!="number"||n<0||st(n))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+n+".");Ne=n}});A.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0};A.prototype.setMaxListeners=function(e){if(typeof e!="number"||e<0||st(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this};function ot(n){return n._maxListeners===void 0?A.defaultMaxListeners:n._maxListeners}A.prototype.getMaxListeners=function(){return ot(this)};A.prototype.emit=function(e){for(var t=[],i=1;i<arguments.length;i++)t.push(arguments[i]);var r=e==="error",s=this._events;if(s!==void 0)r=r&&s.error===void 0;else if(!r)return!1;if(r){var o;if(t.length>0&&(o=t[0]),o instanceof Error)throw o;var a=new Error("Unhandled error."+(o?" ("+o.message+")":""));throw a.context=o,a}var d=s[e];if(d===void 0)return!1;if(typeof d=="function")Ge(d,this,t);else for(var h=d.length,c=ut(d,h),i=0;i<h;++i)Ge(c[i],this,t);return!0};function at(n,e,t,i){var r,s,o;if(he(t),s=n._events,s===void 0?(s=n._events=Object.create(null),n._eventsCount=0):(s.newListener!==void 0&&(n.emit("newListener",e,t.listener?t.listener:t),s=n._events),o=s[e]),o===void 0)o=s[e]=t,++n._eventsCount;else if(typeof o=="function"?o=s[e]=i?[t,o]:[o,t]:i?o.unshift(t):o.push(t),r=ot(n),r>0&&o.length>r&&!o.warned){o.warned=!0;var a=new Error("Possible EventEmitter memory leak detected. "+o.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");a.name="MaxListenersExceededWarning",a.emitter=n,a.type=e,a.count=o.length,jt(a)}return n}A.prototype.addListener=function(e,t){return at(this,e,t,!1)};A.prototype.on=A.prototype.addListener;A.prototype.prependListener=function(e,t){return at(this,e,t,!0)};function Yt(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function ht(n,e,t){var i={fired:!1,wrapFn:void 0,target:n,type:e,listener:t},r=Yt.bind(i);return r.listener=t,i.wrapFn=r,r}A.prototype.once=function(e,t){return he(t),this.on(e,ht(this,e,t)),this};A.prototype.prependOnceListener=function(e,t){return he(t),this.prependListener(e,ht(this,e,t)),this};A.prototype.removeListener=function(e,t){var i,r,s,o,a;if(he(t),r=this._events,r===void 0)return this;if(i=r[e],i===void 0)return this;if(i===t||i.listener===t)--this._eventsCount===0?this._events=Object.create(null):(delete r[e],r.removeListener&&this.emit("removeListener",e,i.listener||t));else if(typeof i!="function"){for(s=-1,o=i.length-1;o>=0;o--)if(i[o]===t||i[o].listener===t){a=i[o].listener,s=o;break}if(s<0)return this;s===0?i.shift():Kt(i,s),i.length===1&&(r[e]=i[0]),r.removeListener!==void 0&&this.emit("removeListener",e,a||t)}return this};A.prototype.off=A.prototype.removeListener;A.prototype.removeAllListeners=function(e){var t,i,r;if(i=this._events,i===void 0)return this;if(i.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):i[e]!==void 0&&(--this._eventsCount===0?this._events=Object.create(null):delete i[e]),this;if(arguments.length===0){var s=Object.keys(i),o;for(r=0;r<s.length;++r)o=s[r],o!=="removeListener"&&this.removeAllListeners(o);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(t=i[e],typeof t=="function")this.removeListener(e,t);else if(t!==void 0)for(r=t.length-1;r>=0;r--)this.removeListener(e,t[r]);return this};function dt(n,e,t){var i=n._events;if(i===void 0)return[];var r=i[e];return r===void 0?[]:typeof r=="function"?t?[r.listener||r]:[r]:t?Xt(r):ut(r,r.length)}A.prototype.listeners=function(e){return dt(this,e,!0)};A.prototype.rawListeners=function(e){return dt(this,e,!1)};A.listenerCount=function(n,e){return typeof n.listenerCount=="function"?n.listenerCount(e):ct.call(n,e)};A.prototype.listenerCount=ct;function ct(n){var e=this._events;if(e!==void 0){var t=e[n];if(typeof t=="function")return 1;if(t!==void 0)return t.length}return 0}A.prototype.eventNames=function(){return this._eventsCount>0?se(this._events):[]};function ut(n,e){for(var t=new Array(e),i=0;i<e;++i)t[i]=n[i];return t}function Kt(n,e){for(;e+1<n.length;e++)n[e]=n[e+1];n.pop()}function Xt(n){for(var e=new Array(n.length),t=0;t<e.length;++t)e[t]=n[t].listener||n[t];return e}function qt(n,e){return new Promise(function(t,i){function r(o){n.removeListener(e,s),i(o)}function s(){typeof n.removeListener=="function"&&n.removeListener("error",r),t([].slice.call(arguments))}lt(n,e,s,{once:!0}),e!=="error"&&Zt(n,r,{once:!0})})}function Zt(n,e,t){typeof n.on=="function"&&lt(n,"error",e,t)}function lt(n,e,t,i){if(typeof n.on=="function")i.once?n.once(e,t):n.on(e,t);else if(typeof n.addEventListener=="function")n.addEventListener(e,function r(s){i.once&&n.removeEventListener(e,r),t(s)});else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof n)}var ft=ve.exports;function F(n){if(typeof n!="function")throw new Error("obliterator/iterator: expecting a function!");this.next=n}typeof Symbol<"u"&&(F.prototype[Symbol.iterator]=function(){return this});F.of=function(){var n=arguments,e=n.length,t=0;return new F(function(){return t>=e?{done:!0}:{done:!1,value:n[t++]}})};F.empty=function(){var n=new F(function(){return{done:!0}});return n};F.fromSequence=function(n){var e=0,t=n.length;return new F(function(){return e>=t?{done:!0}:{done:!1,value:n[e++]}})};F.is=function(n){return n instanceof F?!0:typeof n=="object"&&n!==null&&typeof n.next=="function"};var _e=F;const D=ae(_e);var xe={};xe.ARRAY_BUFFER_SUPPORT=typeof ArrayBuffer<"u";xe.SYMBOL_SUPPORT=typeof Symbol<"u";var Jt=_e,gt=xe,Qt=gt.ARRAY_BUFFER_SUPPORT,ei=gt.SYMBOL_SUPPORT;function ti(n){return typeof n=="string"||Array.isArray(n)||Qt&&ArrayBuffer.isView(n)?Jt.fromSequence(n):typeof n!="object"||n===null?null:ei&&typeof n[Symbol.iterator]=="function"?n[Symbol.iterator]():typeof n.next=="function"?n:null}var pt=function(e){var t=ti(e);if(!t)throw new Error("obliterator: target is not iterable nor a valid iterator.");return t},ii=pt,ni=function(e,t){for(var i=arguments.length>1?t:1/0,r=i!==1/0?new Array(i):[],s,o=0,a=ii(e);;){if(o===i)return r;if(s=a.next(),s.done)return o!==t&&(r.length=o),r;r[o++]=s.value}};const mt=ae(ni);var ri=_e,si=pt,oi=function(){var e=arguments,t=null,i=-1;return new ri(function(){var s=null;do{if(t===null){if(i++,i>=e.length)return{done:!0};t=si(e[i])}if(s=t.next(),s.done===!0){t=null;continue}break}while(!0);return s})};const M=ae(oi);function ai(){const n=arguments[0];for(let e=1,t=arguments.length;e<t;e++)if(arguments[e])for(const i in arguments[e])n[i]=arguments[e][i];return n}let C=ai;typeof Object.assign=="function"&&(C=Object.assign);function L(n,e,t,i){const r=n._nodes.get(e);let s=null;return r&&(i==="mixed"?s=r.out&&r.out[t]||r.undirected&&r.undirected[t]:i==="directed"?s=r.out&&r.out[t]:s=r.undirected&&r.undirected[t]),s}function R(n){return typeof n=="object"&&n!==null}function yt(n){let e;for(e in n)return!1;return!0}function S(n,e,t){Object.defineProperty(n,e,{enumerable:!1,configurable:!1,writable:!0,value:t})}function G(n,e,t){const i={enumerable:!0,configurable:!0};typeof t=="function"?i.get=t:(i.value=t,i.writable=!1),Object.defineProperty(n,e,i)}function ke(n){return!(!R(n)||n.attributes&&!Array.isArray(n.attributes))}function hi(){let n=Math.floor(Math.random()*256)&255;return()=>n++}class Ae extends Error{constructor(e){super(),this.name="GraphError",this.message=e}}class m extends Ae{constructor(e){super(e),this.name="InvalidArgumentsGraphError",typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,m.prototype.constructor)}}class p extends Ae{constructor(e){super(e),this.name="NotFoundGraphError",typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,p.prototype.constructor)}}class b extends Ae{constructor(e){super(e),this.name="UsageGraphError",typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,b.prototype.constructor)}}function wt(n,e){this.key=n,this.attributes=e,this.clear()}wt.prototype.clear=function(){this.inDegree=0,this.outDegree=0,this.undirectedDegree=0,this.undirectedLoops=0,this.directedLoops=0,this.in={},this.out={},this.undirected={}};function bt(n,e){this.key=n,this.attributes=e,this.clear()}bt.prototype.clear=function(){this.inDegree=0,this.outDegree=0,this.directedLoops=0,this.in={},this.out={}};function Et(n,e){this.key=n,this.attributes=e,this.clear()}Et.prototype.clear=function(){this.undirectedDegree=0,this.undirectedLoops=0,this.undirected={}};function j(n,e,t,i,r){this.key=e,this.attributes=r,this.undirected=n,this.source=t,this.target=i}j.prototype.attach=function(){let n="out",e="in";this.undirected&&(n=e="undirected");const t=this.source.key,i=this.target.key;this.source[n][i]=this,!(this.undirected&&t===i)&&(this.target[e][t]=this)};j.prototype.attachMulti=function(){let n="out",e="in";const t=this.source.key,i=this.target.key;this.undirected&&(n=e="undirected");const r=this.source[n],s=r[i];if(typeof s>"u"){r[i]=this,this.undirected&&t===i||(this.target[e][t]=this);return}s.previous=this,this.next=s,r[i]=this,this.target[e][t]=this};j.prototype.detach=function(){const n=this.source.key,e=this.target.key;let t="out",i="in";this.undirected&&(t=i="undirected"),delete this.source[t][e],delete this.target[i][n]};j.prototype.detachMulti=function(){const n=this.source.key,e=this.target.key;let t="out",i="in";this.undirected&&(t=i="undirected"),this.previous===void 0?this.next===void 0?(delete this.source[t][e],delete this.target[i][n]):(this.next.previous=void 0,this.source[t][e]=this.next,this.target[i][n]=this.next):(this.previous.next=this.next,this.next!==void 0&&(this.next.previous=this.previous))};const vt=0,_t=1,di=2,xt=3;function U(n,e,t,i,r,s,o){let a,d,h,c;if(i=""+i,t===vt){if(a=n._nodes.get(i),!a)throw new p(`Graph.${e}: could not find the "${i}" node in the graph.`);h=r,c=s}else if(t===xt){if(r=""+r,d=n._edges.get(r),!d)throw new p(`Graph.${e}: could not find the "${r}" edge in the graph.`);const u=d.source.key,l=d.target.key;if(i===u)a=d.target;else if(i===l)a=d.source;else throw new p(`Graph.${e}: the "${i}" node is not attached to the "${r}" edge (${u}, ${l}).`);h=s,c=o}else{if(d=n._edges.get(i),!d)throw new p(`Graph.${e}: could not find the "${i}" edge in the graph.`);t===_t?a=d.source:a=d.target,h=r,c=s}return[a,h,c]}function ci(n,e,t){n.prototype[e]=function(i,r,s){const[o,a]=U(this,e,t,i,r,s);return o.attributes[a]}}function ui(n,e,t){n.prototype[e]=function(i,r){const[s]=U(this,e,t,i,r);return s.attributes}}function li(n,e,t){n.prototype[e]=function(i,r,s){const[o,a]=U(this,e,t,i,r,s);return o.attributes.hasOwnProperty(a)}}function fi(n,e,t){n.prototype[e]=function(i,r,s,o){const[a,d,h]=U(this,e,t,i,r,s,o);return a.attributes[d]=h,this.emit("nodeAttributesUpdated",{key:a.key,type:"set",attributes:a.attributes,name:d}),this}}function gi(n,e,t){n.prototype[e]=function(i,r,s,o){const[a,d,h]=U(this,e,t,i,r,s,o);if(typeof h!="function")throw new m(`Graph.${e}: updater should be a function.`);const c=a.attributes,u=h(c[d]);return c[d]=u,this.emit("nodeAttributesUpdated",{key:a.key,type:"set",attributes:a.attributes,name:d}),this}}function pi(n,e,t){n.prototype[e]=function(i,r,s){const[o,a]=U(this,e,t,i,r,s);return delete o.attributes[a],this.emit("nodeAttributesUpdated",{key:o.key,type:"remove",attributes:o.attributes,name:a}),this}}function mi(n,e,t){n.prototype[e]=function(i,r,s){const[o,a]=U(this,e,t,i,r,s);if(!R(a))throw new m(`Graph.${e}: provided attributes are not a plain object.`);return o.attributes=a,this.emit("nodeAttributesUpdated",{key:o.key,type:"replace",attributes:o.attributes}),this}}function yi(n,e,t){n.prototype[e]=function(i,r,s){const[o,a]=U(this,e,t,i,r,s);if(!R(a))throw new m(`Graph.${e}: provided attributes are not a plain object.`);return C(o.attributes,a),this.emit("nodeAttributesUpdated",{key:o.key,type:"merge",attributes:o.attributes,data:a}),this}}function wi(n,e,t){n.prototype[e]=function(i,r,s){const[o,a]=U(this,e,t,i,r,s);if(typeof a!="function")throw new m(`Graph.${e}: provided updater is not a function.`);return o.attributes=a(o.attributes),this.emit("nodeAttributesUpdated",{key:o.key,type:"update",attributes:o.attributes}),this}}const bi=[{name:n=>`get${n}Attribute`,attacher:ci},{name:n=>`get${n}Attributes`,attacher:ui},{name:n=>`has${n}Attribute`,attacher:li},{name:n=>`set${n}Attribute`,attacher:fi},{name:n=>`update${n}Attribute`,attacher:gi},{name:n=>`remove${n}Attribute`,attacher:pi},{name:n=>`replace${n}Attributes`,attacher:mi},{name:n=>`merge${n}Attributes`,attacher:yi},{name:n=>`update${n}Attributes`,attacher:wi}];function Ei(n){bi.forEach(function({name:e,attacher:t}){t(n,e("Node"),vt),t(n,e("Source"),_t),t(n,e("Target"),di),t(n,e("Opposite"),xt)})}function vi(n,e,t){n.prototype[e]=function(i,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new b(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new b(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+i,a=""+r;if(r=arguments[2],s=L(this,o,a,t),!s)throw new p(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new b(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(i=""+i,s=this._edges.get(i),!s)throw new p(`Graph.${e}: could not find the "${i}" edge in the graph.`)}return s.attributes[r]}}function _i(n,e,t){n.prototype[e]=function(i){let r;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new b(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>1){if(this.multi)throw new b(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const s=""+i,o=""+arguments[1];if(r=L(this,s,o,t),!r)throw new p(`Graph.${e}: could not find an edge for the given path ("${s}" - "${o}").`)}else{if(t!=="mixed")throw new b(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(i=""+i,r=this._edges.get(i),!r)throw new p(`Graph.${e}: could not find the "${i}" edge in the graph.`)}return r.attributes}}function xi(n,e,t){n.prototype[e]=function(i,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new b(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new b(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+i,a=""+r;if(r=arguments[2],s=L(this,o,a,t),!s)throw new p(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new b(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(i=""+i,s=this._edges.get(i),!s)throw new p(`Graph.${e}: could not find the "${i}" edge in the graph.`)}return s.attributes.hasOwnProperty(r)}}function Ai(n,e,t){n.prototype[e]=function(i,r,s){let o;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new b(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>3){if(this.multi)throw new b(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const a=""+i,d=""+r;if(r=arguments[2],s=arguments[3],o=L(this,a,d,t),!o)throw new p(`Graph.${e}: could not find an edge for the given path ("${a}" - "${d}").`)}else{if(t!=="mixed")throw new b(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(i=""+i,o=this._edges.get(i),!o)throw new p(`Graph.${e}: could not find the "${i}" edge in the graph.`)}return o.attributes[r]=s,this.emit("edgeAttributesUpdated",{key:o.key,type:"set",attributes:o.attributes,name:r}),this}}function Ti(n,e,t){n.prototype[e]=function(i,r,s){let o;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new b(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>3){if(this.multi)throw new b(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const a=""+i,d=""+r;if(r=arguments[2],s=arguments[3],o=L(this,a,d,t),!o)throw new p(`Graph.${e}: could not find an edge for the given path ("${a}" - "${d}").`)}else{if(t!=="mixed")throw new b(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(i=""+i,o=this._edges.get(i),!o)throw new p(`Graph.${e}: could not find the "${i}" edge in the graph.`)}if(typeof s!="function")throw new m(`Graph.${e}: updater should be a function.`);return o.attributes[r]=s(o.attributes[r]),this.emit("edgeAttributesUpdated",{key:o.key,type:"set",attributes:o.attributes,name:r}),this}}function Ci(n,e,t){n.prototype[e]=function(i,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new b(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new b(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+i,a=""+r;if(r=arguments[2],s=L(this,o,a,t),!s)throw new p(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new b(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(i=""+i,s=this._edges.get(i),!s)throw new p(`Graph.${e}: could not find the "${i}" edge in the graph.`)}return delete s.attributes[r],this.emit("edgeAttributesUpdated",{key:s.key,type:"remove",attributes:s.attributes,name:r}),this}}function Ri(n,e,t){n.prototype[e]=function(i,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new b(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new b(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+i,a=""+r;if(r=arguments[2],s=L(this,o,a,t),!s)throw new p(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new b(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(i=""+i,s=this._edges.get(i),!s)throw new p(`Graph.${e}: could not find the "${i}" edge in the graph.`)}if(!R(r))throw new m(`Graph.${e}: provided attributes are not a plain object.`);return s.attributes=r,this.emit("edgeAttributesUpdated",{key:s.key,type:"replace",attributes:s.attributes}),this}}function Si(n,e,t){n.prototype[e]=function(i,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new b(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new b(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+i,a=""+r;if(r=arguments[2],s=L(this,o,a,t),!s)throw new p(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new b(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(i=""+i,s=this._edges.get(i),!s)throw new p(`Graph.${e}: could not find the "${i}" edge in the graph.`)}if(!R(r))throw new m(`Graph.${e}: provided attributes are not a plain object.`);return C(s.attributes,r),this.emit("edgeAttributesUpdated",{key:s.key,type:"merge",attributes:s.attributes,data:r}),this}}function Li(n,e,t){n.prototype[e]=function(i,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new b(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new b(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+i,a=""+r;if(r=arguments[2],s=L(this,o,a,t),!s)throw new p(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new b(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(i=""+i,s=this._edges.get(i),!s)throw new p(`Graph.${e}: could not find the "${i}" edge in the graph.`)}if(typeof r!="function")throw new m(`Graph.${e}: provided updater is not a function.`);return s.attributes=r(s.attributes),this.emit("edgeAttributesUpdated",{key:s.key,type:"update",attributes:s.attributes}),this}}const Di=[{name:n=>`get${n}Attribute`,attacher:vi},{name:n=>`get${n}Attributes`,attacher:_i},{name:n=>`has${n}Attribute`,attacher:xi},{name:n=>`set${n}Attribute`,attacher:Ai},{name:n=>`update${n}Attribute`,attacher:Ti},{name:n=>`remove${n}Attribute`,attacher:Ci},{name:n=>`replace${n}Attributes`,attacher:Ri},{name:n=>`merge${n}Attributes`,attacher:Si},{name:n=>`update${n}Attributes`,attacher:Li}];function Gi(n){Di.forEach(function({name:e,attacher:t}){t(n,e("Edge"),"mixed"),t(n,e("DirectedEdge"),"directed"),t(n,e("UndirectedEdge"),"undirected")})}const Ni=[{name:"edges",type:"mixed"},{name:"inEdges",type:"directed",direction:"in"},{name:"outEdges",type:"directed",direction:"out"},{name:"inboundEdges",type:"mixed",direction:"in"},{name:"outboundEdges",type:"mixed",direction:"out"},{name:"directedEdges",type:"directed"},{name:"undirectedEdges",type:"undirected"}];function ki(n,e,t,i){let r=!1;for(const s in e){if(s===i)continue;const o=e[s];if(r=t(o.key,o.attributes,o.source.key,o.target.key,o.source.attributes,o.target.attributes,o.undirected),n&&r)return o.key}}function Fi(n,e,t,i){let r,s,o,a=!1;for(const d in e)if(d!==i){r=e[d];do{if(s=r.source,o=r.target,a=t(r.key,r.attributes,s.key,o.key,s.attributes,o.attributes,r.undirected),n&&a)return r.key;r=r.next}while(r!==void 0)}}function ce(n,e){const t=Object.keys(n),i=t.length;let r,s=0;return new D(function(){do if(r)r=r.next;else{if(s>=i)return{done:!0};const a=t[s++];if(a===e){r=void 0;continue}r=n[a]}while(!r);return{done:!1,value:{edge:r.key,attributes:r.attributes,source:r.source.key,target:r.target.key,sourceAttributes:r.source.attributes,targetAttributes:r.target.attributes,undirected:r.undirected}}})}function Ii(n,e,t,i){const r=e[t];if(!r)return;const s=r.source,o=r.target;if(i(r.key,r.attributes,s.key,o.key,s.attributes,o.attributes,r.undirected)&&n)return r.key}function $i(n,e,t,i){let r=e[t];if(!r)return;let s=!1;do{if(s=i(r.key,r.attributes,r.source.key,r.target.key,r.source.attributes,r.target.attributes,r.undirected),n&&s)return r.key;r=r.next}while(r!==void 0)}function ue(n,e){let t=n[e];return t.next!==void 0?new D(function(){if(!t)return{done:!0};const i={edge:t.key,attributes:t.attributes,source:t.source.key,target:t.target.key,sourceAttributes:t.source.attributes,targetAttributes:t.target.attributes,undirected:t.undirected};return t=t.next,{done:!1,value:i}}):D.of({edge:t.key,attributes:t.attributes,source:t.source.key,target:t.target.key,sourceAttributes:t.source.attributes,targetAttributes:t.target.attributes,undirected:t.undirected})}function Pi(n,e){if(n.size===0)return[];if(e==="mixed"||e===n.type)return typeof Array.from=="function"?Array.from(n._edges.keys()):mt(n._edges.keys(),n._edges.size);const t=e==="undirected"?n.undirectedSize:n.directedSize,i=new Array(t),r=e==="undirected",s=n._edges.values();let o=0,a,d;for(;a=s.next(),a.done!==!0;)d=a.value,d.undirected===r&&(i[o++]=d.key);return i}function At(n,e,t,i){if(e.size===0)return;const r=t!=="mixed"&&t!==e.type,s=t==="undirected";let o,a,d=!1;const h=e._edges.values();for(;o=h.next(),o.done!==!0;){if(a=o.value,r&&a.undirected!==s)continue;const{key:c,attributes:u,source:l,target:f}=a;if(d=i(c,u,l.key,f.key,l.attributes,f.attributes,a.undirected),n&&d)return c}}function Mi(n,e){if(n.size===0)return D.empty();const t=e!=="mixed"&&e!==n.type,i=e==="undirected",r=n._edges.values();return new D(function(){let o,a;for(;;){if(o=r.next(),o.done)return o;if(a=o.value,!(t&&a.undirected!==i))break}return{value:{edge:a.key,attributes:a.attributes,source:a.source.key,target:a.target.key,sourceAttributes:a.source.attributes,targetAttributes:a.target.attributes,undirected:a.undirected},done:!1}})}function Te(n,e,t,i,r,s){const o=e?Fi:ki;let a;if(t!=="undirected"&&(i!=="out"&&(a=o(n,r.in,s),n&&a)||i!=="in"&&(a=o(n,r.out,s,i?void 0:r.key),n&&a))||t!=="directed"&&(a=o(n,r.undirected,s),n&&a))return a}function Ui(n,e,t,i){const r=[];return Te(!1,n,e,t,i,function(s){r.push(s)}),r}function zi(n,e,t){let i=D.empty();return n!=="undirected"&&(e!=="out"&&typeof t.in<"u"&&(i=M(i,ce(t.in))),e!=="in"&&typeof t.out<"u"&&(i=M(i,ce(t.out,e?void 0:t.key)))),n!=="directed"&&typeof t.undirected<"u"&&(i=M(i,ce(t.undirected))),i}function Ce(n,e,t,i,r,s,o){const a=t?$i:Ii;let d;if(e!=="undirected"&&(typeof r.in<"u"&&i!=="out"&&(d=a(n,r.in,s,o),n&&d)||typeof r.out<"u"&&i!=="in"&&(i||r.key!==s)&&(d=a(n,r.out,s,o),n&&d))||e!=="directed"&&typeof r.undirected<"u"&&(d=a(n,r.undirected,s,o),n&&d))return d}function Oi(n,e,t,i,r){const s=[];return Ce(!1,n,e,t,i,r,function(o){s.push(o)}),s}function Bi(n,e,t,i){let r=D.empty();return n!=="undirected"&&(typeof t.in<"u"&&e!=="out"&&i in t.in&&(r=M(r,ue(t.in,i))),typeof t.out<"u"&&e!=="in"&&i in t.out&&(e||t.key!==i)&&(r=M(r,ue(t.out,i)))),n!=="directed"&&typeof t.undirected<"u"&&i in t.undirected&&(r=M(r,ue(t.undirected,i))),r}function Hi(n,e){const{name:t,type:i,direction:r}=e;n.prototype[t]=function(s,o){if(i!=="mixed"&&this.type!=="mixed"&&i!==this.type)return[];if(!arguments.length)return Pi(this,i);if(arguments.length===1){s=""+s;const a=this._nodes.get(s);if(typeof a>"u")throw new p(`Graph.${t}: could not find the "${s}" node in the graph.`);return Ui(this.multi,i==="mixed"?this.type:i,r,a)}if(arguments.length===2){s=""+s,o=""+o;const a=this._nodes.get(s);if(!a)throw new p(`Graph.${t}:  could not find the "${s}" source node in the graph.`);if(!this._nodes.has(o))throw new p(`Graph.${t}:  could not find the "${o}" target node in the graph.`);return Oi(i,this.multi,r,a,o)}throw new m(`Graph.${t}: too many arguments (expecting 0, 1 or 2 and got ${arguments.length}).`)}}function Wi(n,e){const{name:t,type:i,direction:r}=e,s="forEach"+t[0].toUpperCase()+t.slice(1,-1);n.prototype[s]=function(h,c,u){if(!(i!=="mixed"&&this.type!=="mixed"&&i!==this.type)){if(arguments.length===1)return u=h,At(!1,this,i,u);if(arguments.length===2){h=""+h,u=c;const l=this._nodes.get(h);if(typeof l>"u")throw new p(`Graph.${s}: could not find the "${h}" node in the graph.`);return Te(!1,this.multi,i==="mixed"?this.type:i,r,l,u)}if(arguments.length===3){h=""+h,c=""+c;const l=this._nodes.get(h);if(!l)throw new p(`Graph.${s}:  could not find the "${h}" source node in the graph.`);if(!this._nodes.has(c))throw new p(`Graph.${s}:  could not find the "${c}" target node in the graph.`);return Ce(!1,i,this.multi,r,l,c,u)}throw new m(`Graph.${s}: too many arguments (expecting 1, 2 or 3 and got ${arguments.length}).`)}};const o="map"+t[0].toUpperCase()+t.slice(1);n.prototype[o]=function(){const h=Array.prototype.slice.call(arguments),c=h.pop();let u;if(h.length===0){let l=0;i!=="directed"&&(l+=this.undirectedSize),i!=="undirected"&&(l+=this.directedSize),u=new Array(l);let f=0;h.push((g,E,w,y,v,x,_)=>{u[f++]=c(g,E,w,y,v,x,_)})}else u=[],h.push((l,f,g,E,w,y,v)=>{u.push(c(l,f,g,E,w,y,v))});return this[s].apply(this,h),u};const a="filter"+t[0].toUpperCase()+t.slice(1);n.prototype[a]=function(){const h=Array.prototype.slice.call(arguments),c=h.pop(),u=[];return h.push((l,f,g,E,w,y,v)=>{c(l,f,g,E,w,y,v)&&u.push(l)}),this[s].apply(this,h),u};const d="reduce"+t[0].toUpperCase()+t.slice(1);n.prototype[d]=function(){let h=Array.prototype.slice.call(arguments);if(h.length<2||h.length>4)throw new m(`Graph.${d}: invalid number of arguments (expecting 2, 3 or 4 and got ${h.length}).`);if(typeof h[h.length-1]=="function"&&typeof h[h.length-2]!="function")throw new m(`Graph.${d}: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.`);let c,u;h.length===2?(c=h[0],u=h[1],h=[]):h.length===3?(c=h[1],u=h[2],h=[h[0]]):h.length===4&&(c=h[2],u=h[3],h=[h[0],h[1]]);let l=u;return h.push((f,g,E,w,y,v,x)=>{l=c(l,f,g,E,w,y,v,x)}),this[s].apply(this,h),l}}function Vi(n,e){const{name:t,type:i,direction:r}=e,s="find"+t[0].toUpperCase()+t.slice(1,-1);n.prototype[s]=function(d,h,c){if(i!=="mixed"&&this.type!=="mixed"&&i!==this.type)return!1;if(arguments.length===1)return c=d,At(!0,this,i,c);if(arguments.length===2){d=""+d,c=h;const u=this._nodes.get(d);if(typeof u>"u")throw new p(`Graph.${s}: could not find the "${d}" node in the graph.`);return Te(!0,this.multi,i==="mixed"?this.type:i,r,u,c)}if(arguments.length===3){d=""+d,h=""+h;const u=this._nodes.get(d);if(!u)throw new p(`Graph.${s}:  could not find the "${d}" source node in the graph.`);if(!this._nodes.has(h))throw new p(`Graph.${s}:  could not find the "${h}" target node in the graph.`);return Ce(!0,i,this.multi,r,u,h,c)}throw new m(`Graph.${s}: too many arguments (expecting 1, 2 or 3 and got ${arguments.length}).`)};const o="some"+t[0].toUpperCase()+t.slice(1,-1);n.prototype[o]=function(){const d=Array.prototype.slice.call(arguments),h=d.pop();return d.push((u,l,f,g,E,w,y)=>h(u,l,f,g,E,w,y)),!!this[s].apply(this,d)};const a="every"+t[0].toUpperCase()+t.slice(1,-1);n.prototype[a]=function(){const d=Array.prototype.slice.call(arguments),h=d.pop();return d.push((u,l,f,g,E,w,y)=>!h(u,l,f,g,E,w,y)),!this[s].apply(this,d)}}function ji(n,e){const{name:t,type:i,direction:r}=e,s=t.slice(0,-1)+"Entries";n.prototype[s]=function(o,a){if(i!=="mixed"&&this.type!=="mixed"&&i!==this.type)return D.empty();if(!arguments.length)return Mi(this,i);if(arguments.length===1){o=""+o;const d=this._nodes.get(o);if(!d)throw new p(`Graph.${s}: could not find the "${o}" node in the graph.`);return zi(i,r,d)}if(arguments.length===2){o=""+o,a=""+a;const d=this._nodes.get(o);if(!d)throw new p(`Graph.${s}:  could not find the "${o}" source node in the graph.`);if(!this._nodes.has(a))throw new p(`Graph.${s}:  could not find the "${a}" target node in the graph.`);return Bi(i,r,d,a)}throw new m(`Graph.${s}: too many arguments (expecting 0, 1 or 2 and got ${arguments.length}).`)}}function Yi(n){Ni.forEach(e=>{Hi(n,e),Wi(n,e),Vi(n,e),ji(n,e)})}const Ki=[{name:"neighbors",type:"mixed"},{name:"inNeighbors",type:"directed",direction:"in"},{name:"outNeighbors",type:"directed",direction:"out"},{name:"inboundNeighbors",type:"mixed",direction:"in"},{name:"outboundNeighbors",type:"mixed",direction:"out"},{name:"directedNeighbors",type:"directed"},{name:"undirectedNeighbors",type:"undirected"}];function de(){this.A=null,this.B=null}de.prototype.wrap=function(n){this.A===null?this.A=n:this.B===null&&(this.B=n)};de.prototype.has=function(n){return this.A!==null&&n in this.A||this.B!==null&&n in this.B};function q(n,e,t,i,r){for(const s in i){const o=i[s],a=o.source,d=o.target,h=a===t?d:a;if(e&&e.has(h.key))continue;const c=r(h.key,h.attributes);if(n&&c)return h.key}}function Re(n,e,t,i,r){if(e!=="mixed"){if(e==="undirected")return q(n,null,i,i.undirected,r);if(typeof t=="string")return q(n,null,i,i[t],r)}const s=new de;let o;if(e!=="undirected"){if(t!=="out"){if(o=q(n,null,i,i.in,r),n&&o)return o;s.wrap(i.in)}if(t!=="in"){if(o=q(n,s,i,i.out,r),n&&o)return o;s.wrap(i.out)}}if(e!=="directed"&&(o=q(n,s,i,i.undirected,r),n&&o))return o}function Xi(n,e,t){if(n!=="mixed"){if(n==="undirected")return Object.keys(t.undirected);if(typeof e=="string")return Object.keys(t[e])}const i=[];return Re(!1,n,e,t,function(r){i.push(r)}),i}function Z(n,e,t){const i=Object.keys(t),r=i.length;let s=0;return new D(function(){let a=null;do{if(s>=r)return n&&n.wrap(t),{done:!0};const d=t[i[s++]],h=d.source,c=d.target;if(a=h===e?c:h,n&&n.has(a.key)){a=null;continue}}while(a===null);return{done:!1,value:{neighbor:a.key,attributes:a.attributes}}})}function qi(n,e,t){if(n!=="mixed"){if(n==="undirected")return Z(null,t,t.undirected);if(typeof e=="string")return Z(null,t,t[e])}let i=D.empty();const r=new de;return n!=="undirected"&&(e!=="out"&&(i=M(i,Z(r,t,t.in))),e!=="in"&&(i=M(i,Z(r,t,t.out)))),n!=="directed"&&(i=M(i,Z(r,t,t.undirected))),i}function Zi(n,e){const{name:t,type:i,direction:r}=e;n.prototype[t]=function(s){if(i!=="mixed"&&this.type!=="mixed"&&i!==this.type)return[];s=""+s;const o=this._nodes.get(s);if(typeof o>"u")throw new p(`Graph.${t}: could not find the "${s}" node in the graph.`);return Xi(i==="mixed"?this.type:i,r,o)}}function Ji(n,e){const{name:t,type:i,direction:r}=e,s="forEach"+t[0].toUpperCase()+t.slice(1,-1);n.prototype[s]=function(h,c){if(i!=="mixed"&&this.type!=="mixed"&&i!==this.type)return;h=""+h;const u=this._nodes.get(h);if(typeof u>"u")throw new p(`Graph.${s}: could not find the "${h}" node in the graph.`);Re(!1,i==="mixed"?this.type:i,r,u,c)};const o="map"+t[0].toUpperCase()+t.slice(1);n.prototype[o]=function(h,c){const u=[];return this[s](h,(l,f)=>{u.push(c(l,f))}),u};const a="filter"+t[0].toUpperCase()+t.slice(1);n.prototype[a]=function(h,c){const u=[];return this[s](h,(l,f)=>{c(l,f)&&u.push(l)}),u};const d="reduce"+t[0].toUpperCase()+t.slice(1);n.prototype[d]=function(h,c,u){if(arguments.length<3)throw new m(`Graph.${d}: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.`);let l=u;return this[s](h,(f,g)=>{l=c(l,f,g)}),l}}function Qi(n,e){const{name:t,type:i,direction:r}=e,s=t[0].toUpperCase()+t.slice(1,-1),o="find"+s;n.prototype[o]=function(h,c){if(i!=="mixed"&&this.type!=="mixed"&&i!==this.type)return;h=""+h;const u=this._nodes.get(h);if(typeof u>"u")throw new p(`Graph.${o}: could not find the "${h}" node in the graph.`);return Re(!0,i==="mixed"?this.type:i,r,u,c)};const a="some"+s;n.prototype[a]=function(h,c){return!!this[o](h,c)};const d="every"+s;n.prototype[d]=function(h,c){return!this[o](h,(l,f)=>!c(l,f))}}function en(n,e){const{name:t,type:i,direction:r}=e,s=t.slice(0,-1)+"Entries";n.prototype[s]=function(o){if(i!=="mixed"&&this.type!=="mixed"&&i!==this.type)return D.empty();o=""+o;const a=this._nodes.get(o);if(typeof a>"u")throw new p(`Graph.${s}: could not find the "${o}" node in the graph.`);return qi(i==="mixed"?this.type:i,r,a)}}function tn(n){Ki.forEach(e=>{Zi(n,e),Ji(n,e),Qi(n,e),en(n,e)})}function te(n,e,t,i,r){const s=i._nodes.values(),o=i.type;let a,d,h,c,u,l,f;for(;a=s.next(),a.done!==!0;){let g=!1;if(d=a.value,o!=="undirected"){c=d.out;for(h in c){u=c[h];do{if(l=u.target,g=!0,f=r(d.key,l.key,d.attributes,l.attributes,u.key,u.attributes,u.undirected),n&&f)return u;u=u.next}while(u)}}if(o!=="directed"){c=d.undirected;for(h in c)if(!(e&&d.key>h)){u=c[h];do{if(l=u.target,l.key!==h&&(l=u.source),g=!0,f=r(d.key,l.key,d.attributes,l.attributes,u.key,u.attributes,u.undirected),n&&f)return u;u=u.next}while(u)}}if(t&&!g&&(f=r(d.key,null,d.attributes,null,null,null,null),n&&f))return null}}function nn(n,e){const t={key:n};return yt(e.attributes)||(t.attributes=C({},e.attributes)),t}function rn(n,e,t){const i={key:e,source:t.source.key,target:t.target.key};return yt(t.attributes)||(i.attributes=C({},t.attributes)),n==="mixed"&&t.undirected&&(i.undirected=!0),i}function sn(n){if(!R(n))throw new m('Graph.import: invalid serialized node. A serialized node should be a plain object with at least a "key" property.');if(!("key"in n))throw new m("Graph.import: serialized node is missing its key.");if("attributes"in n&&(!R(n.attributes)||n.attributes===null))throw new m("Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.")}function on(n){if(!R(n))throw new m('Graph.import: invalid serialized edge. A serialized edge should be a plain object with at least a "source" & "target" property.');if(!("source"in n))throw new m("Graph.import: serialized edge is missing its source.");if(!("target"in n))throw new m("Graph.import: serialized edge is missing its target.");if("attributes"in n&&(!R(n.attributes)||n.attributes===null))throw new m("Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.");if("undirected"in n&&typeof n.undirected!="boolean")throw new m("Graph.import: invalid undirectedness information. Undirected should be boolean or omitted.")}const an=hi(),hn=new Set(["directed","undirected","mixed"]),Fe=new Set(["domain","_events","_eventsCount","_maxListeners"]),dn=[{name:n=>`${n}Edge`,generateKey:!0},{name:n=>`${n}DirectedEdge`,generateKey:!0,type:"directed"},{name:n=>`${n}UndirectedEdge`,generateKey:!0,type:"undirected"},{name:n=>`${n}EdgeWithKey`},{name:n=>`${n}DirectedEdgeWithKey`,type:"directed"},{name:n=>`${n}UndirectedEdgeWithKey`,type:"undirected"}],cn={allowSelfLoops:!0,multi:!1,type:"mixed"};function un(n,e,t){if(t&&!R(t))throw new m(`Graph.addNode: invalid attributes. Expecting an object but got "${t}"`);if(e=""+e,t=t||{},n._nodes.has(e))throw new b(`Graph.addNode: the "${e}" node already exist in the graph.`);const i=new n.NodeDataClass(e,t);return n._nodes.set(e,i),n.emit("nodeAdded",{key:e,attributes:t}),i}function Ie(n,e,t){const i=new n.NodeDataClass(e,t);return n._nodes.set(e,i),n.emit("nodeAdded",{key:e,attributes:t}),i}function Tt(n,e,t,i,r,s,o,a){if(!i&&n.type==="undirected")throw new b(`Graph.${e}: you cannot add a directed edge to an undirected graph. Use the #.addEdge or #.addUndirectedEdge instead.`);if(i&&n.type==="directed")throw new b(`Graph.${e}: you cannot add an undirected edge to a directed graph. Use the #.addEdge or #.addDirectedEdge instead.`);if(a&&!R(a))throw new m(`Graph.${e}: invalid attributes. Expecting an object but got "${a}"`);if(s=""+s,o=""+o,a=a||{},!n.allowSelfLoops&&s===o)throw new b(`Graph.${e}: source & target are the same ("${s}"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.`);const d=n._nodes.get(s),h=n._nodes.get(o);if(!d)throw new p(`Graph.${e}: source node "${s}" not found.`);if(!h)throw new p(`Graph.${e}: target node "${o}" not found.`);const c={key:null,undirected:i,source:s,target:o,attributes:a};if(t)r=n._edgeKeyGenerator();else if(r=""+r,n._edges.has(r))throw new b(`Graph.${e}: the "${r}" edge already exists in the graph.`);if(!n.multi&&(i?typeof d.undirected[o]<"u":typeof d.out[o]<"u"))throw new b(`Graph.${e}: an edge linking "${s}" to "${o}" already exists. If you really want to add multiple edges linking those nodes, you should create a multi graph by using the 'multi' option.`);const u=new j(i,r,d,h,a);n._edges.set(r,u);const l=s===o;return i?(d.undirectedDegree++,h.undirectedDegree++,l&&(d.undirectedLoops++,n._undirectedSelfLoopCount++)):(d.outDegree++,h.inDegree++,l&&(d.directedLoops++,n._directedSelfLoopCount++)),n.multi?u.attachMulti():u.attach(),i?n._undirectedSize++:n._directedSize++,c.key=r,n.emit("edgeAdded",c),r}function ln(n,e,t,i,r,s,o,a,d){if(!i&&n.type==="undirected")throw new b(`Graph.${e}: you cannot merge/update a directed edge to an undirected graph. Use the #.mergeEdge/#.updateEdge or #.addUndirectedEdge instead.`);if(i&&n.type==="directed")throw new b(`Graph.${e}: you cannot merge/update an undirected edge to a directed graph. Use the #.mergeEdge/#.updateEdge or #.addDirectedEdge instead.`);if(a){if(d){if(typeof a!="function")throw new m(`Graph.${e}: invalid updater function. Expecting a function but got "${a}"`)}else if(!R(a))throw new m(`Graph.${e}: invalid attributes. Expecting an object but got "${a}"`)}s=""+s,o=""+o;let h;if(d&&(h=a,a=void 0),!n.allowSelfLoops&&s===o)throw new b(`Graph.${e}: source & target are the same ("${s}"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.`);let c=n._nodes.get(s),u=n._nodes.get(o),l,f;if(!t&&(l=n._edges.get(r),l)){if((l.source.key!==s||l.target.key!==o)&&(!i||l.source.key!==o||l.target.key!==s))throw new b(`Graph.${e}: inconsistency detected when attempting to merge the "${r}" edge with "${s}" source & "${o}" target vs. ("${l.source.key}", "${l.target.key}").`);f=l}if(!f&&!n.multi&&c&&(f=i?c.undirected[o]:c.out[o]),f){const v=[f.key,!1,!1,!1];if(d?!h:!a)return v;if(d){const x=f.attributes;f.attributes=h(x),n.emit("edgeAttributesUpdated",{type:"replace",key:f.key,attributes:f.attributes})}else C(f.attributes,a),n.emit("edgeAttributesUpdated",{type:"merge",key:f.key,attributes:f.attributes,data:a});return v}a=a||{},d&&h&&(a=h(a));const g={key:null,undirected:i,source:s,target:o,attributes:a};if(t)r=n._edgeKeyGenerator();else if(r=""+r,n._edges.has(r))throw new b(`Graph.${e}: the "${r}" edge already exists in the graph.`);let E=!1,w=!1;c||(c=Ie(n,s,{}),E=!0,s===o&&(u=c,w=!0)),u||(u=Ie(n,o,{}),w=!0),l=new j(i,r,c,u,a),n._edges.set(r,l);const y=s===o;return i?(c.undirectedDegree++,u.undirectedDegree++,y&&(c.undirectedLoops++,n._undirectedSelfLoopCount++)):(c.outDegree++,u.inDegree++,y&&(c.directedLoops++,n._directedSelfLoopCount++)),n.multi?l.attachMulti():l.attach(),i?n._undirectedSize++:n._directedSize++,g.key=r,n.emit("edgeAdded",g),[r,!0,E,w]}function H(n,e){n._edges.delete(e.key);const{source:t,target:i,attributes:r}=e,s=e.undirected,o=t===i;s?(t.undirectedDegree--,i.undirectedDegree--,o&&(t.undirectedLoops--,n._undirectedSelfLoopCount--)):(t.outDegree--,i.inDegree--,o&&(t.directedLoops--,n._directedSelfLoopCount--)),n.multi?e.detachMulti():e.detach(),s?n._undirectedSize--:n._directedSize--,n.emit("edgeDropped",{key:e.key,attributes:r,source:t.key,target:i.key,undirected:s})}class T extends ft.EventEmitter{constructor(e){if(super(),e=C({},cn,e),typeof e.multi!="boolean")throw new m(`Graph.constructor: invalid 'multi' option. Expecting a boolean but got "${e.multi}".`);if(!hn.has(e.type))throw new m(`Graph.constructor: invalid 'type' option. Should be one of "mixed", "directed" or "undirected" but got "${e.type}".`);if(typeof e.allowSelfLoops!="boolean")throw new m(`Graph.constructor: invalid 'allowSelfLoops' option. Expecting a boolean but got "${e.allowSelfLoops}".`);const t=e.type==="mixed"?wt:e.type==="directed"?bt:Et;S(this,"NodeDataClass",t);const i="geid_"+an()+"_";let r=0;const s=()=>{let o;do o=i+r++;while(this._edges.has(o));return o};S(this,"_attributes",{}),S(this,"_nodes",new Map),S(this,"_edges",new Map),S(this,"_directedSize",0),S(this,"_undirectedSize",0),S(this,"_directedSelfLoopCount",0),S(this,"_undirectedSelfLoopCount",0),S(this,"_edgeKeyGenerator",s),S(this,"_options",e),Fe.forEach(o=>S(this,o,this[o])),G(this,"order",()=>this._nodes.size),G(this,"size",()=>this._edges.size),G(this,"directedSize",()=>this._directedSize),G(this,"undirectedSize",()=>this._undirectedSize),G(this,"selfLoopCount",()=>this._directedSelfLoopCount+this._undirectedSelfLoopCount),G(this,"directedSelfLoopCount",()=>this._directedSelfLoopCount),G(this,"undirectedSelfLoopCount",()=>this._undirectedSelfLoopCount),G(this,"multi",this._options.multi),G(this,"type",this._options.type),G(this,"allowSelfLoops",this._options.allowSelfLoops),G(this,"implementation",()=>"graphology")}_resetInstanceCounters(){this._directedSize=0,this._undirectedSize=0,this._directedSelfLoopCount=0,this._undirectedSelfLoopCount=0}hasNode(e){return this._nodes.has(""+e)}hasDirectedEdge(e,t){if(this.type==="undirected")return!1;if(arguments.length===1){const i=""+e,r=this._edges.get(i);return!!r&&!r.undirected}else if(arguments.length===2){e=""+e,t=""+t;const i=this._nodes.get(e);return i?i.out.hasOwnProperty(t):!1}throw new m(`Graph.hasDirectedEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`)}hasUndirectedEdge(e,t){if(this.type==="directed")return!1;if(arguments.length===1){const i=""+e,r=this._edges.get(i);return!!r&&r.undirected}else if(arguments.length===2){e=""+e,t=""+t;const i=this._nodes.get(e);return i?i.undirected.hasOwnProperty(t):!1}throw new m(`Graph.hasDirectedEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`)}hasEdge(e,t){if(arguments.length===1){const i=""+e;return this._edges.has(i)}else if(arguments.length===2){e=""+e,t=""+t;const i=this._nodes.get(e);return i?typeof i.out<"u"&&i.out.hasOwnProperty(t)||typeof i.undirected<"u"&&i.undirected.hasOwnProperty(t):!1}throw new m(`Graph.hasEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`)}directedEdge(e,t){if(this.type==="undirected")return;if(e=""+e,t=""+t,this.multi)throw new b("Graph.directedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.directedEdges instead.");const i=this._nodes.get(e);if(!i)throw new p(`Graph.directedEdge: could not find the "${e}" source node in the graph.`);if(!this._nodes.has(t))throw new p(`Graph.directedEdge: could not find the "${t}" target node in the graph.`);const r=i.out&&i.out[t]||void 0;if(r)return r.key}undirectedEdge(e,t){if(this.type==="directed")return;if(e=""+e,t=""+t,this.multi)throw new b("Graph.undirectedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.undirectedEdges instead.");const i=this._nodes.get(e);if(!i)throw new p(`Graph.undirectedEdge: could not find the "${e}" source node in the graph.`);if(!this._nodes.has(t))throw new p(`Graph.undirectedEdge: could not find the "${t}" target node in the graph.`);const r=i.undirected&&i.undirected[t]||void 0;if(r)return r.key}edge(e,t){if(this.multi)throw new b("Graph.edge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.edges instead.");e=""+e,t=""+t;const i=this._nodes.get(e);if(!i)throw new p(`Graph.edge: could not find the "${e}" source node in the graph.`);if(!this._nodes.has(t))throw new p(`Graph.edge: could not find the "${t}" target node in the graph.`);const r=i.out&&i.out[t]||i.undirected&&i.undirected[t]||void 0;if(r)return r.key}areDirectedNeighbors(e,t){e=""+e,t=""+t;const i=this._nodes.get(e);if(!i)throw new p(`Graph.areDirectedNeighbors: could not find the "${e}" node in the graph.`);return this.type==="undirected"?!1:t in i.in||t in i.out}areOutNeighbors(e,t){e=""+e,t=""+t;const i=this._nodes.get(e);if(!i)throw new p(`Graph.areOutNeighbors: could not find the "${e}" node in the graph.`);return this.type==="undirected"?!1:t in i.out}areInNeighbors(e,t){e=""+e,t=""+t;const i=this._nodes.get(e);if(!i)throw new p(`Graph.areInNeighbors: could not find the "${e}" node in the graph.`);return this.type==="undirected"?!1:t in i.in}areUndirectedNeighbors(e,t){e=""+e,t=""+t;const i=this._nodes.get(e);if(!i)throw new p(`Graph.areUndirectedNeighbors: could not find the "${e}" node in the graph.`);return this.type==="directed"?!1:t in i.undirected}areNeighbors(e,t){e=""+e,t=""+t;const i=this._nodes.get(e);if(!i)throw new p(`Graph.areNeighbors: could not find the "${e}" node in the graph.`);return this.type!=="undirected"&&(t in i.in||t in i.out)||this.type!=="directed"&&t in i.undirected}areInboundNeighbors(e,t){e=""+e,t=""+t;const i=this._nodes.get(e);if(!i)throw new p(`Graph.areInboundNeighbors: could not find the "${e}" node in the graph.`);return this.type!=="undirected"&&t in i.in||this.type!=="directed"&&t in i.undirected}areOutboundNeighbors(e,t){e=""+e,t=""+t;const i=this._nodes.get(e);if(!i)throw new p(`Graph.areOutboundNeighbors: could not find the "${e}" node in the graph.`);return this.type!=="undirected"&&t in i.out||this.type!=="directed"&&t in i.undirected}inDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new p(`Graph.inDegree: could not find the "${e}" node in the graph.`);return this.type==="undirected"?0:t.inDegree}outDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new p(`Graph.outDegree: could not find the "${e}" node in the graph.`);return this.type==="undirected"?0:t.outDegree}directedDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new p(`Graph.directedDegree: could not find the "${e}" node in the graph.`);return this.type==="undirected"?0:t.inDegree+t.outDegree}undirectedDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new p(`Graph.undirectedDegree: could not find the "${e}" node in the graph.`);return this.type==="directed"?0:t.undirectedDegree}inboundDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new p(`Graph.inboundDegree: could not find the "${e}" node in the graph.`);let i=0;return this.type!=="directed"&&(i+=t.undirectedDegree),this.type!=="undirected"&&(i+=t.inDegree),i}outboundDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new p(`Graph.outboundDegree: could not find the "${e}" node in the graph.`);let i=0;return this.type!=="directed"&&(i+=t.undirectedDegree),this.type!=="undirected"&&(i+=t.outDegree),i}degree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new p(`Graph.degree: could not find the "${e}" node in the graph.`);let i=0;return this.type!=="directed"&&(i+=t.undirectedDegree),this.type!=="undirected"&&(i+=t.inDegree+t.outDegree),i}inDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new p(`Graph.inDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);return this.type==="undirected"?0:t.inDegree-t.directedLoops}outDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new p(`Graph.outDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);return this.type==="undirected"?0:t.outDegree-t.directedLoops}directedDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new p(`Graph.directedDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);return this.type==="undirected"?0:t.inDegree+t.outDegree-t.directedLoops*2}undirectedDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new p(`Graph.undirectedDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);return this.type==="directed"?0:t.undirectedDegree-t.undirectedLoops*2}inboundDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new p(`Graph.inboundDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);let i=0,r=0;return this.type!=="directed"&&(i+=t.undirectedDegree,r+=t.undirectedLoops*2),this.type!=="undirected"&&(i+=t.inDegree,r+=t.directedLoops),i-r}outboundDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new p(`Graph.outboundDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);let i=0,r=0;return this.type!=="directed"&&(i+=t.undirectedDegree,r+=t.undirectedLoops*2),this.type!=="undirected"&&(i+=t.outDegree,r+=t.directedLoops),i-r}degreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new p(`Graph.degreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);let i=0,r=0;return this.type!=="directed"&&(i+=t.undirectedDegree,r+=t.undirectedLoops*2),this.type!=="undirected"&&(i+=t.inDegree+t.outDegree,r+=t.directedLoops*2),i-r}source(e){e=""+e;const t=this._edges.get(e);if(!t)throw new p(`Graph.source: could not find the "${e}" edge in the graph.`);return t.source.key}target(e){e=""+e;const t=this._edges.get(e);if(!t)throw new p(`Graph.target: could not find the "${e}" edge in the graph.`);return t.target.key}extremities(e){e=""+e;const t=this._edges.get(e);if(!t)throw new p(`Graph.extremities: could not find the "${e}" edge in the graph.`);return[t.source.key,t.target.key]}opposite(e,t){e=""+e,t=""+t;const i=this._edges.get(t);if(!i)throw new p(`Graph.opposite: could not find the "${t}" edge in the graph.`);const r=i.source.key,s=i.target.key;if(e===r)return s;if(e===s)return r;throw new p(`Graph.opposite: the "${e}" node is not attached to the "${t}" edge (${r}, ${s}).`)}hasExtremity(e,t){e=""+e,t=""+t;const i=this._edges.get(e);if(!i)throw new p(`Graph.hasExtremity: could not find the "${e}" edge in the graph.`);return i.source.key===t||i.target.key===t}isUndirected(e){e=""+e;const t=this._edges.get(e);if(!t)throw new p(`Graph.isUndirected: could not find the "${e}" edge in the graph.`);return t.undirected}isDirected(e){e=""+e;const t=this._edges.get(e);if(!t)throw new p(`Graph.isDirected: could not find the "${e}" edge in the graph.`);return!t.undirected}isSelfLoop(e){e=""+e;const t=this._edges.get(e);if(!t)throw new p(`Graph.isSelfLoop: could not find the "${e}" edge in the graph.`);return t.source===t.target}addNode(e,t){return un(this,e,t).key}mergeNode(e,t){if(t&&!R(t))throw new m(`Graph.mergeNode: invalid attributes. Expecting an object but got "${t}"`);e=""+e,t=t||{};let i=this._nodes.get(e);return i?(t&&(C(i.attributes,t),this.emit("nodeAttributesUpdated",{type:"merge",key:e,attributes:i.attributes,data:t})),[e,!1]):(i=new this.NodeDataClass(e,t),this._nodes.set(e,i),this.emit("nodeAdded",{key:e,attributes:t}),[e,!0])}updateNode(e,t){if(t&&typeof t!="function")throw new m(`Graph.updateNode: invalid updater function. Expecting a function but got "${t}"`);e=""+e;let i=this._nodes.get(e);if(i){if(t){const s=i.attributes;i.attributes=t(s),this.emit("nodeAttributesUpdated",{type:"replace",key:e,attributes:i.attributes})}return[e,!1]}const r=t?t({}):{};return i=new this.NodeDataClass(e,r),this._nodes.set(e,i),this.emit("nodeAdded",{key:e,attributes:r}),[e,!0]}dropNode(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new p(`Graph.dropNode: could not find the "${e}" node in the graph.`);let i;if(this.type!=="undirected"){for(const r in t.out){i=t.out[r];do H(this,i),i=i.next;while(i)}for(const r in t.in){i=t.in[r];do H(this,i),i=i.next;while(i)}}if(this.type!=="directed")for(const r in t.undirected){i=t.undirected[r];do H(this,i),i=i.next;while(i)}this._nodes.delete(e),this.emit("nodeDropped",{key:e,attributes:t.attributes})}dropEdge(e){let t;if(arguments.length>1){const i=""+arguments[0],r=""+arguments[1];if(t=L(this,i,r,this.type),!t)throw new p(`Graph.dropEdge: could not find the "${i}" -> "${r}" edge in the graph.`)}else if(e=""+e,t=this._edges.get(e),!t)throw new p(`Graph.dropEdge: could not find the "${e}" edge in the graph.`);return H(this,t),this}dropDirectedEdge(e,t){if(arguments.length<2)throw new b("Graph.dropDirectedEdge: it does not make sense to try and drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.");if(this.multi)throw new b("Graph.dropDirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.");e=""+e,t=""+t;const i=L(this,e,t,"directed");if(!i)throw new p(`Graph.dropDirectedEdge: could not find a "${e}" -> "${t}" edge in the graph.`);return H(this,i),this}dropUndirectedEdge(e,t){if(arguments.length<2)throw new b("Graph.dropUndirectedEdge: it does not make sense to drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.");if(this.multi)throw new b("Graph.dropUndirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.");const i=L(this,e,t,"undirected");if(!i)throw new p(`Graph.dropUndirectedEdge: could not find a "${e}" -> "${t}" edge in the graph.`);return H(this,i),this}clear(){this._edges.clear(),this._nodes.clear(),this._resetInstanceCounters(),this.emit("cleared")}clearEdges(){const e=this._nodes.values();let t;for(;t=e.next(),t.done!==!0;)t.value.clear();this._edges.clear(),this._resetInstanceCounters(),this.emit("edgesCleared")}getAttribute(e){return this._attributes[e]}getAttributes(){return this._attributes}hasAttribute(e){return this._attributes.hasOwnProperty(e)}setAttribute(e,t){return this._attributes[e]=t,this.emit("attributesUpdated",{type:"set",attributes:this._attributes,name:e}),this}updateAttribute(e,t){if(typeof t!="function")throw new m("Graph.updateAttribute: updater should be a function.");const i=this._attributes[e];return this._attributes[e]=t(i),this.emit("attributesUpdated",{type:"set",attributes:this._attributes,name:e}),this}removeAttribute(e){return delete this._attributes[e],this.emit("attributesUpdated",{type:"remove",attributes:this._attributes,name:e}),this}replaceAttributes(e){if(!R(e))throw new m("Graph.replaceAttributes: provided attributes are not a plain object.");return this._attributes=e,this.emit("attributesUpdated",{type:"replace",attributes:this._attributes}),this}mergeAttributes(e){if(!R(e))throw new m("Graph.mergeAttributes: provided attributes are not a plain object.");return C(this._attributes,e),this.emit("attributesUpdated",{type:"merge",attributes:this._attributes,data:e}),this}updateAttributes(e){if(typeof e!="function")throw new m("Graph.updateAttributes: provided updater is not a function.");return this._attributes=e(this._attributes),this.emit("attributesUpdated",{type:"update",attributes:this._attributes}),this}updateEachNodeAttributes(e,t){if(typeof e!="function")throw new m("Graph.updateEachNodeAttributes: expecting an updater function.");if(t&&!ke(t))throw new m("Graph.updateEachNodeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}");const i=this._nodes.values();let r,s;for(;r=i.next(),r.done!==!0;)s=r.value,s.attributes=e(s.key,s.attributes);this.emit("eachNodeAttributesUpdated",{hints:t||null})}updateEachEdgeAttributes(e,t){if(typeof e!="function")throw new m("Graph.updateEachEdgeAttributes: expecting an updater function.");if(t&&!ke(t))throw new m("Graph.updateEachEdgeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}");const i=this._edges.values();let r,s,o,a;for(;r=i.next(),r.done!==!0;)s=r.value,o=s.source,a=s.target,s.attributes=e(s.key,s.attributes,o.key,a.key,o.attributes,a.attributes,s.undirected);this.emit("eachEdgeAttributesUpdated",{hints:t||null})}forEachAdjacencyEntry(e){if(typeof e!="function")throw new m("Graph.forEachAdjacencyEntry: expecting a callback.");te(!1,!1,!1,this,e)}forEachAdjacencyEntryWithOrphans(e){if(typeof e!="function")throw new m("Graph.forEachAdjacencyEntryWithOrphans: expecting a callback.");te(!1,!1,!0,this,e)}forEachAssymetricAdjacencyEntry(e){if(typeof e!="function")throw new m("Graph.forEachAssymetricAdjacencyEntry: expecting a callback.");te(!1,!0,!1,this,e)}forEachAssymetricAdjacencyEntryWithOrphans(e){if(typeof e!="function")throw new m("Graph.forEachAssymetricAdjacencyEntryWithOrphans: expecting a callback.");te(!1,!0,!0,this,e)}nodes(){return typeof Array.from=="function"?Array.from(this._nodes.keys()):mt(this._nodes.keys(),this._nodes.size)}forEachNode(e){if(typeof e!="function")throw new m("Graph.forEachNode: expecting a callback.");const t=this._nodes.values();let i,r;for(;i=t.next(),i.done!==!0;)r=i.value,e(r.key,r.attributes)}findNode(e){if(typeof e!="function")throw new m("Graph.findNode: expecting a callback.");const t=this._nodes.values();let i,r;for(;i=t.next(),i.done!==!0;)if(r=i.value,e(r.key,r.attributes))return r.key}mapNodes(e){if(typeof e!="function")throw new m("Graph.mapNode: expecting a callback.");const t=this._nodes.values();let i,r;const s=new Array(this.order);let o=0;for(;i=t.next(),i.done!==!0;)r=i.value,s[o++]=e(r.key,r.attributes);return s}someNode(e){if(typeof e!="function")throw new m("Graph.someNode: expecting a callback.");const t=this._nodes.values();let i,r;for(;i=t.next(),i.done!==!0;)if(r=i.value,e(r.key,r.attributes))return!0;return!1}everyNode(e){if(typeof e!="function")throw new m("Graph.everyNode: expecting a callback.");const t=this._nodes.values();let i,r;for(;i=t.next(),i.done!==!0;)if(r=i.value,!e(r.key,r.attributes))return!1;return!0}filterNodes(e){if(typeof e!="function")throw new m("Graph.filterNodes: expecting a callback.");const t=this._nodes.values();let i,r;const s=[];for(;i=t.next(),i.done!==!0;)r=i.value,e(r.key,r.attributes)&&s.push(r.key);return s}reduceNodes(e,t){if(typeof e!="function")throw new m("Graph.reduceNodes: expecting a callback.");if(arguments.length<2)throw new m("Graph.reduceNodes: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.");let i=t;const r=this._nodes.values();let s,o;for(;s=r.next(),s.done!==!0;)o=s.value,i=e(i,o.key,o.attributes);return i}nodeEntries(){const e=this._nodes.values();return new D(()=>{const t=e.next();if(t.done)return t;const i=t.value;return{value:{node:i.key,attributes:i.attributes},done:!1}})}export(){const e=new Array(this._nodes.size);let t=0;this._nodes.forEach((r,s)=>{e[t++]=nn(s,r)});const i=new Array(this._edges.size);return t=0,this._edges.forEach((r,s)=>{i[t++]=rn(this.type,s,r)}),{options:{type:this.type,multi:this.multi,allowSelfLoops:this.allowSelfLoops},attributes:this.getAttributes(),nodes:e,edges:i}}import(e,t=!1){if(e instanceof T)return e.forEachNode((d,h)=>{t?this.mergeNode(d,h):this.addNode(d,h)}),e.forEachEdge((d,h,c,u,l,f,g)=>{t?g?this.mergeUndirectedEdgeWithKey(d,c,u,h):this.mergeDirectedEdgeWithKey(d,c,u,h):g?this.addUndirectedEdgeWithKey(d,c,u,h):this.addDirectedEdgeWithKey(d,c,u,h)}),this;if(!R(e))throw new m("Graph.import: invalid argument. Expecting a serialized graph or, alternatively, a Graph instance.");if(e.attributes){if(!R(e.attributes))throw new m("Graph.import: invalid attributes. Expecting a plain object.");t?this.mergeAttributes(e.attributes):this.replaceAttributes(e.attributes)}let i,r,s,o,a;if(e.nodes){if(s=e.nodes,!Array.isArray(s))throw new m("Graph.import: invalid nodes. Expecting an array.");for(i=0,r=s.length;i<r;i++){o=s[i],sn(o);const{key:d,attributes:h}=o;t?this.mergeNode(d,h):this.addNode(d,h)}}if(e.edges){let d=!1;if(this.type==="undirected"&&(d=!0),s=e.edges,!Array.isArray(s))throw new m("Graph.import: invalid edges. Expecting an array.");for(i=0,r=s.length;i<r;i++){a=s[i],on(a);const{source:h,target:c,attributes:u,undirected:l=d}=a;let f;"key"in a?(f=t?l?this.mergeUndirectedEdgeWithKey:this.mergeDirectedEdgeWithKey:l?this.addUndirectedEdgeWithKey:this.addDirectedEdgeWithKey,f.call(this,a.key,h,c,u)):(f=t?l?this.mergeUndirectedEdge:this.mergeDirectedEdge:l?this.addUndirectedEdge:this.addDirectedEdge,f.call(this,h,c,u))}}return this}nullCopy(e){const t=new T(C({},this._options,e));return t.replaceAttributes(C({},this.getAttributes())),t}emptyCopy(e){const t=this.nullCopy(e);return this._nodes.forEach((i,r)=>{const s=C({},i.attributes);i=new t.NodeDataClass(r,s),t._nodes.set(r,i)}),t}copy(e){if(e=e||{},typeof e.type=="string"&&e.type!==this.type&&e.type!=="mixed")throw new b(`Graph.copy: cannot create an incompatible copy from "${this.type}" type to "${e.type}" because this would mean losing information about the current graph.`);if(typeof e.multi=="boolean"&&e.multi!==this.multi&&e.multi!==!0)throw new b("Graph.copy: cannot create an incompatible copy by downgrading a multi graph to a simple one because this would mean losing information about the current graph.");if(typeof e.allowSelfLoops=="boolean"&&e.allowSelfLoops!==this.allowSelfLoops&&e.allowSelfLoops!==!0)throw new b("Graph.copy: cannot create an incompatible copy from a graph allowing self loops to one that does not because this would mean losing information about the current graph.");const t=this.emptyCopy(e),i=this._edges.values();let r,s;for(;r=i.next(),r.done!==!0;)s=r.value,Tt(t,"copy",!1,s.undirected,s.key,s.source.key,s.target.key,C({},s.attributes));return t}toJSON(){return this.export()}toString(){return"[object Graph]"}inspect(){const e={};this._nodes.forEach((s,o)=>{e[o]=s.attributes});const t={},i={};this._edges.forEach((s,o)=>{const a=s.undirected?"--":"->";let d="",h=s.source.key,c=s.target.key,u;s.undirected&&h>c&&(u=h,h=c,c=u);const l=`(${h})${a}(${c})`;o.startsWith("geid_")?this.multi&&(typeof i[l]>"u"?i[l]=0:i[l]++,d+=`${i[l]}. `):d+=`[${o}]: `,d+=l,t[d]=s.attributes});const r={};for(const s in this)this.hasOwnProperty(s)&&!Fe.has(s)&&typeof this[s]!="function"&&typeof s!="symbol"&&(r[s]=this[s]);return r.attributes=this._attributes,r.nodes=e,r.edges=t,S(r,"constructor",this.constructor),r}}typeof Symbol<"u"&&(T.prototype[Symbol.for("nodejs.util.inspect.custom")]=T.prototype.inspect);dn.forEach(n=>{["add","merge","update"].forEach(e=>{const t=n.name(e),i=e==="add"?Tt:ln;n.generateKey?T.prototype[t]=function(r,s,o){return i(this,t,!0,(n.type||this.type)==="undirected",null,r,s,o,e==="update")}:T.prototype[t]=function(r,s,o,a){return i(this,t,!1,(n.type||this.type)==="undirected",r,s,o,a,e==="update")}})});Ei(T);Gi(T);Yi(T);tn(T);class Ct extends T{constructor(e){const t=C({type:"directed"},e);if("multi"in t&&t.multi!==!1)throw new m("DirectedGraph.from: inconsistent indication that the graph should be multi in given options!");if(t.type!=="directed")throw new m('DirectedGraph.from: inconsistent "'+t.type+'" type in given options!');super(t)}}class Rt extends T{constructor(e){const t=C({type:"undirected"},e);if("multi"in t&&t.multi!==!1)throw new m("UndirectedGraph.from: inconsistent indication that the graph should be multi in given options!");if(t.type!=="undirected")throw new m('UndirectedGraph.from: inconsistent "'+t.type+'" type in given options!');super(t)}}class St extends T{constructor(e){const t=C({multi:!0},e);if("multi"in t&&t.multi!==!0)throw new m("MultiGraph.from: inconsistent indication that the graph should be simple in given options!");super(t)}}class Lt extends T{constructor(e){const t=C({type:"directed",multi:!0},e);if("multi"in t&&t.multi!==!0)throw new m("MultiDirectedGraph.from: inconsistent indication that the graph should be simple in given options!");if(t.type!=="directed")throw new m('MultiDirectedGraph.from: inconsistent "'+t.type+'" type in given options!');super(t)}}class Dt extends T{constructor(e){const t=C({type:"undirected",multi:!0},e);if("multi"in t&&t.multi!==!0)throw new m("MultiUndirectedGraph.from: inconsistent indication that the graph should be simple in given options!");if(t.type!=="undirected")throw new m('MultiUndirectedGraph.from: inconsistent "'+t.type+'" type in given options!');super(t)}}function Y(n){n.from=function(e,t){const i=C({},e.options,t),r=new n(i);return r.import(e),r}}Y(T);Y(Ct);Y(Rt);Y(St);Y(Lt);Y(Dt);T.Graph=T;T.DirectedGraph=Ct;T.UndirectedGraph=Rt;T.MultiGraph=St;T.MultiDirectedGraph=Lt;T.MultiUndirectedGraph=Dt;T.InvalidArgumentsGraphError=m;T.NotFoundGraphError=p;T.UsageGraphError=b;class Se extends ft.EventEmitter{constructor(){super(),this.rawEmitter=this}}const fn=n=>n,gn=n=>n*n,pn=n=>n*(2-n),mn=n=>(n*=2)<1?.5*n*n:-.5*(--n*(n-2)-1),yn=n=>n*n*n,wn=n=>--n*n*n+1,bn=n=>(n*=2)<1?.5*n*n*n:.5*((n-=2)*n*n+2),Gt={linear:fn,quadraticIn:gn,quadraticOut:pn,quadraticInOut:mn,cubicIn:yn,cubicOut:wn,cubicInOut:bn},Nt={easing:"quadraticInOut",duration:150};function xr(n,e,t,i){const r=Object.assign({},Nt,t),s=typeof r.easing=="function"?r.easing:Gt[r.easing],o=Date.now(),a={};for(const c in e){const u=e[c];a[c]={};for(const l in u)a[c][l]=n.getNodeAttribute(c,l)}let d=null;const h=()=>{d=null;let c=(Date.now()-o)/r.duration;if(c>=1){for(const u in e){const l=e[u];for(const f in l)n.setNodeAttribute(u,f,l[f])}typeof i=="function"&&i();return}c=s(c);for(const u in e){const l=e[u],f=a[u];for(const g in l)n.setNodeAttribute(u,g,l[g]*c+f[g]*(1-c))}d=requestAnimationFrame(h)};return h(),()=>{d&&cancelAnimationFrame(d)}}const le={black:"#000000",silver:"#C0C0C0",gray:"#808080",grey:"#808080",white:"#FFFFFF",maroon:"#800000",red:"#FF0000",purple:"#800080",fuchsia:"#FF00FF",green:"#008000",lime:"#00FF00",olive:"#808000",yellow:"#FFFF00",navy:"#000080",blue:"#0000FF",teal:"#008080",aqua:"#00FFFF",darkblue:"#00008B",mediumblue:"#0000CD",darkgreen:"#006400",darkcyan:"#008B8B",deepskyblue:"#00BFFF",darkturquoise:"#00CED1",mediumspringgreen:"#00FA9A",springgreen:"#00FF7F",cyan:"#00FFFF",midnightblue:"#191970",dodgerblue:"#1E90FF",lightseagreen:"#20B2AA",forestgreen:"#228B22",seagreen:"#2E8B57",darkslategray:"#2F4F4F",darkslategrey:"#2F4F4F",limegreen:"#32CD32",mediumseagreen:"#3CB371",turquoise:"#40E0D0",royalblue:"#4169E1",steelblue:"#4682B4",darkslateblue:"#483D8B",mediumturquoise:"#48D1CC",indigo:"#4B0082",darkolivegreen:"#556B2F",cadetblue:"#5F9EA0",cornflowerblue:"#6495ED",rebeccapurple:"#663399",mediumaquamarine:"#66CDAA",dimgray:"#696969",dimgrey:"#696969",slateblue:"#6A5ACD",olivedrab:"#6B8E23",slategray:"#708090",slategrey:"#708090",lightslategray:"#778899",lightslategrey:"#778899",mediumslateblue:"#7B68EE",lawngreen:"#7CFC00",chartreuse:"#7FFF00",aquamarine:"#7FFFD4",skyblue:"#87CEEB",lightskyblue:"#87CEFA",blueviolet:"#8A2BE2",darkred:"#8B0000",darkmagenta:"#8B008B",saddlebrown:"#8B4513",darkseagreen:"#8FBC8F",lightgreen:"#90EE90",mediumpurple:"#9370DB",darkviolet:"#9400D3",palegreen:"#98FB98",darkorchid:"#9932CC",yellowgreen:"#9ACD32",sienna:"#A0522D",brown:"#A52A2A",darkgray:"#A9A9A9",darkgrey:"#A9A9A9",lightblue:"#ADD8E6",greenyellow:"#ADFF2F",paleturquoise:"#AFEEEE",lightsteelblue:"#B0C4DE",powderblue:"#B0E0E6",firebrick:"#B22222",darkgoldenrod:"#B8860B",mediumorchid:"#BA55D3",rosybrown:"#BC8F8F",darkkhaki:"#BDB76B",mediumvioletred:"#C71585",indianred:"#CD5C5C",peru:"#CD853F",chocolate:"#D2691E",tan:"#D2B48C",lightgray:"#D3D3D3",lightgrey:"#D3D3D3",thistle:"#D8BFD8",orchid:"#DA70D6",goldenrod:"#DAA520",palevioletred:"#DB7093",crimson:"#DC143C",gainsboro:"#DCDCDC",plum:"#DDA0DD",burlywood:"#DEB887",lightcyan:"#E0FFFF",lavender:"#E6E6FA",darksalmon:"#E9967A",violet:"#EE82EE",palegoldenrod:"#EEE8AA",lightcoral:"#F08080",khaki:"#F0E68C",aliceblue:"#F0F8FF",honeydew:"#F0FFF0",azure:"#F0FFFF",sandybrown:"#F4A460",wheat:"#F5DEB3",beige:"#F5F5DC",whitesmoke:"#F5F5F5",mintcream:"#F5FFFA",ghostwhite:"#F8F8FF",salmon:"#FA8072",antiquewhite:"#FAEBD7",linen:"#FAF0E6",lightgoldenrodyellow:"#FAFAD2",oldlace:"#FDF5E6",magenta:"#FF00FF",deeppink:"#FF1493",orangered:"#FF4500",tomato:"#FF6347",hotpink:"#FF69B4",coral:"#FF7F50",darkorange:"#FF8C00",lightsalmon:"#FFA07A",orange:"#FFA500",lightpink:"#FFB6C1",pink:"#FFC0CB",gold:"#FFD700",peachpuff:"#FFDAB9",navajowhite:"#FFDEAD",moccasin:"#FFE4B5",bisque:"#FFE4C4",mistyrose:"#FFE4E1",blanchedalmond:"#FFEBCD",papayawhip:"#FFEFD5",lavenderblush:"#FFF0F5",seashell:"#FFF5EE",cornsilk:"#FFF8DC",lemonchiffon:"#FFFACD",floralwhite:"#FFFAF0",snow:"#FFFAFA",lightyellow:"#FFFFE0",ivory:"#FFFFF0"},kt=new Int8Array(4),oe=new Int32Array(kt.buffer,0,1),Ft=new Float32Array(kt.buffer,0,1),En=/^\s*rgba?\s*\(/,vn=/^\s*rgba?\s*\(\s*([0-9]*)\s*,\s*([0-9]*)\s*,\s*([0-9]*)(?:\s*,\s*(.*)?)?\)\s*$/;function _n(n){let e=0,t=0,i=0,r=1;if(n[0]==="#")n.length===4?(e=parseInt(n.charAt(1)+n.charAt(1),16),t=parseInt(n.charAt(2)+n.charAt(2),16),i=parseInt(n.charAt(3)+n.charAt(3),16)):(e=parseInt(n.charAt(1)+n.charAt(2),16),t=parseInt(n.charAt(3)+n.charAt(4),16),i=parseInt(n.charAt(5)+n.charAt(6),16)),n.length===9&&(r=parseInt(n.charAt(7)+n.charAt(8),16)/255);else if(En.test(n)){const s=n.match(vn);s&&(e=+s[1],t=+s[2],i=+s[3],s[4]&&(r=+s[4]))}return{r:e,g:t,b:i,a:r}}const V={};for(const n in le)V[n]=K(le[n]),V[le[n]]=V[n];function It(n,e,t,i,r){return oe[0]=i<<24|t<<16|e<<8|n,r&&(oe[0]=oe[0]&4278190079),Ft[0]}function K(n){if(n=n.toLowerCase(),typeof V[n]<"u")return V[n];const e=_n(n),{r:t,g:i,b:r}=e;let{a:s}=e;s=s*255|0;const o=It(t,i,r,s,!0);return V[n]=o,o}function Ar(n,e){Ft[0]=K(n);let t=oe[0];e&&(t=t|16777216);const i=t&255,r=t>>8&255,s=t>>16&255,o=t>>24&255;return[i,r,s,o]}const fe={};function $t(n){if(typeof fe[n]<"u")return fe[n];const e=(n&16711680)>>>16,t=(n&65280)>>>8,i=n&255,s=It(e,t,i,255,!0);return fe[n]=s,s}function $e(n,e,t,i){return t+(e<<8)+(n<<16)}function Pe(n,e,t,i,r,s){const o=Math.floor(t/s*r),a=Math.floor(n.drawingBufferHeight/s-i/s*r),d=new Uint8Array(4);n.bindFramebuffer(n.FRAMEBUFFER,e),n.readPixels(o,a,1,1,n.RGBA,n.UNSIGNED_BYTE,d);const[h,c,u,l]=d;return[h,c,u,l]}function N(){return Float32Array.of(1,0,0,0,1,0,0,0,1)}function ie(n,e,t){return n[0]=e,n[4]=typeof t=="number"?t:e,n}function Me(n,e){const t=Math.sin(e),i=Math.cos(e);return n[0]=i,n[1]=t,n[3]=-t,n[4]=i,n}function Ue(n,e,t){return n[6]=e,n[7]=t,n}function z(n,e){const t=n[0],i=n[1],r=n[2],s=n[3],o=n[4],a=n[5],d=n[6],h=n[7],c=n[8],u=e[0],l=e[1],f=e[2],g=e[3],E=e[4],w=e[5],y=e[6],v=e[7],x=e[8];return n[0]=u*t+l*s+f*d,n[1]=u*i+l*o+f*h,n[2]=u*r+l*a+f*c,n[3]=g*t+E*s+w*d,n[4]=g*i+E*o+w*h,n[5]=g*r+E*a+w*c,n[6]=y*t+v*s+x*d,n[7]=y*i+v*o+x*h,n[8]=y*r+v*a+x*c,n}function we(n,e,t=1){const i=n[0],r=n[1],s=n[3],o=n[4],a=n[6],d=n[7],h=e.x,c=e.y;return{x:h*i+c*s+a*t,y:h*r+c*o+d*t}}function xn(n,e){const t=n.height/n.width,i=e.height/e.width;return t<1&&i>1||t>1&&i<1?1:Math.min(Math.max(i,1/i),Math.max(1/t,t))}function J(n,e,t,i,r){const{angle:s,ratio:o,x:a,y:d}=n,{width:h,height:c}=e,u=N(),l=Math.min(h,c)-2*i,f=xn(e,t);return r?(z(u,Ue(N(),a,d)),z(u,ie(N(),o)),z(u,Me(N(),s)),z(u,ie(N(),h/l/2/f,c/l/2/f))):(z(u,ie(N(),2*(l/h)*f,2*(l/c)*f)),z(u,Me(N(),-s)),z(u,ie(N(),1/o)),z(u,Ue(N(),-a,-d))),u}function An(n,e,t){const{x:i,y:r}=we(n,{x:Math.cos(e.angle),y:Math.sin(e.angle)},0);return 1/Math.sqrt(Math.pow(i,2)+Math.pow(r,2))/t.width}function ze(n,e){const t=e.size;if(t===0)return;const i=n.length;n.length+=t;let r=0;e.forEach(s=>{n[i+r]=s,r++})}function ge(n,...e){n=n||{};for(let t=0,i=e.length;t<i;t++){const r=e[t];r&&Object.assign(n,r)}return n}var Tn=function(e){return e!==null&&typeof e=="object"&&typeof e.addUndirectedEdgeWithKey=="function"&&typeof e.dropNode=="function"&&typeof e.multi=="boolean"};const Cn=ae(Tn);function Rn(n){if(!n.order)return{x:[0,1],y:[0,1]};let e=1/0,t=-1/0,i=1/0,r=-1/0;return n.forEachNode((s,o)=>{const{x:a,y:d}=o;a<e&&(e=a),a>t&&(t=a),d<i&&(i=d),d>r&&(r=d)}),{x:[e,t],y:[i,r]}}function Sn(n){if(!Cn(n))throw new Error("Sigma: invalid graph instance.");n.forEachNode((e,t)=>{if(!Number.isFinite(t.x)||!Number.isFinite(t.y))throw new Error(`Sigma: Coordinates of node ${e} are invalid. A node must have a numeric 'x' and 'y' attribute.`)})}function Ln(n,e,t){const i=document.createElement(n);if(e)for(const r in e)i.style[r]=e[r];if(t)for(const r in t)i.setAttribute(r,t[r]);return i}function Oe(){return typeof window.devicePixelRatio<"u"?window.devicePixelRatio:1}function Be(n,e,t){return t.sort(function(i,r){const s=e(i)||0,o=e(r)||0;return s<o?-1:s>o?1:0})}function He(n){const{x:[e,t],y:[i,r]}=n;let s=Math.max(t-e,r-i),o=(t+e)/2,a=(r+i)/2;(s===0||Math.abs(s)===1/0||isNaN(s))&&(s=1),isNaN(o)&&(o=0),isNaN(a)&&(a=0);const d=h=>({x:.5+(h.x-o)/s,y:.5+(h.y-a)/s});return d.applyTo=h=>{h.x=.5+(h.x-o)/s,h.y=.5+(h.y-a)/s},d.inverse=h=>({x:o+s*(h.x-.5),y:a+s*(h.y-.5)}),d.ratio=s,d}const ne=1.5;class ee extends Se{constructor(){super(),this.x=.5,this.y=.5,this.angle=0,this.ratio=1,this.minRatio=null,this.maxRatio=null,this.nextFrame=null,this.previousState=null,this.enabled=!0,this.previousState=this.getState()}static from(e){return new ee().setState(e)}enable(){return this.enabled=!0,this}disable(){return this.enabled=!1,this}getState(){return{x:this.x,y:this.y,angle:this.angle,ratio:this.ratio}}hasState(e){return this.x===e.x&&this.y===e.y&&this.ratio===e.ratio&&this.angle===e.angle}getPreviousState(){const e=this.previousState;return e?{x:e.x,y:e.y,angle:e.angle,ratio:e.ratio}:null}getBoundedRatio(e){let t=e;return typeof this.minRatio=="number"&&(t=Math.max(t,this.minRatio)),typeof this.maxRatio=="number"&&(t=Math.min(t,this.maxRatio)),t}validateState(e){const t={};return typeof e.x=="number"&&(t.x=e.x),typeof e.y=="number"&&(t.y=e.y),typeof e.angle=="number"&&(t.angle=e.angle),typeof e.ratio=="number"&&(t.ratio=this.getBoundedRatio(e.ratio)),t}isAnimated(){return!!this.nextFrame}setState(e){if(!this.enabled)return this;this.previousState=this.getState();const t=this.validateState(e);return typeof t.x=="number"&&(this.x=t.x),typeof t.y=="number"&&(this.y=t.y),typeof t.angle=="number"&&(this.angle=t.angle),typeof t.ratio=="number"&&(this.ratio=t.ratio),this.hasState(this.previousState)||this.emit("updated",this.getState()),this}updateState(e){return this.setState(e(this.getState())),this}animate(e,t,i){if(!this.enabled)return;const r=Object.assign({},Nt,t),s=this.validateState(e),o=typeof r.easing=="function"?r.easing:Gt[r.easing],a=Date.now(),d=this.getState(),h=()=>{const c=(Date.now()-a)/r.duration;if(c>=1){this.nextFrame=null,this.setState(s),this.animationCallback&&(this.animationCallback.call(null),this.animationCallback=void 0);return}const u=o(c),l={};typeof s.x=="number"&&(l.x=d.x+(s.x-d.x)*u),typeof s.y=="number"&&(l.y=d.y+(s.y-d.y)*u),typeof s.angle=="number"&&(l.angle=d.angle+(s.angle-d.angle)*u),typeof s.ratio=="number"&&(l.ratio=d.ratio+(s.ratio-d.ratio)*u),this.setState(l),this.nextFrame=requestAnimationFrame(h)};this.nextFrame?(cancelAnimationFrame(this.nextFrame),this.animationCallback&&this.animationCallback.call(null),this.nextFrame=requestAnimationFrame(h)):h(),this.animationCallback=i}animatedZoom(e){if(!e)this.animate({ratio:this.ratio/ne});else{if(typeof e=="number")return this.animate({ratio:this.ratio/e});this.animate({ratio:this.ratio/(e.factor||ne)},e)}}animatedUnzoom(e){if(!e)this.animate({ratio:this.ratio*ne});else{if(typeof e=="number")return this.animate({ratio:this.ratio*e});this.animate({ratio:this.ratio*(e.factor||ne)},e)}}animatedReset(e){this.animate({x:.5,y:.5,ratio:1,angle:0},e)}copy(){return ee.from(this.getState())}}function $(n,e){const t=e.getBoundingClientRect();return{x:n.clientX-t.left,y:n.clientY-t.top}}function I(n,e){const t={...$(n,e),sigmaDefaultPrevented:!1,preventSigmaDefault(){t.sigmaDefaultPrevented=!0},original:n};return t}function Dn(n,e){return{...I(n,e),delta:Pt(n)}}const Gn=2;function be(n){const e=[];for(let t=0,i=Math.min(n.length,Gn);t<i;t++)e.push(n[t]);return e}function pe(n,e){return{touches:be(n.touches).map(t=>$(t,e)),original:n}}function Pt(n){if(typeof n.deltaY<"u")return n.deltaY*-3/360;if(typeof n.detail<"u")return n.detail/-9;throw new Error("Captor: could not extract delta from event.")}class Mt extends Se{constructor(e,t){super(),this.container=e,this.renderer=t}}const Nn=100,kn=3,Fn=200,We=3,Ve=250,je=1.7,In=300,$n=2.2,Pn=200;class Mn extends Mt{constructor(e,t){super(e,t),this.enabled=!0,this.draggedEvents=0,this.downStartTime=null,this.lastMouseX=null,this.lastMouseY=null,this.isMouseDown=!1,this.isMoving=!1,this.movingTimeout=null,this.startCameraState=null,this.clicks=0,this.doubleClickTimeout=null,this.currentWheelDirection=0,this.handleClick=this.handleClick.bind(this),this.handleRightClick=this.handleRightClick.bind(this),this.handleDown=this.handleDown.bind(this),this.handleUp=this.handleUp.bind(this),this.handleMove=this.handleMove.bind(this),this.handleWheel=this.handleWheel.bind(this),this.handleLeave=this.handleLeave.bind(this),this.handleEnter=this.handleEnter.bind(this),e.addEventListener("click",this.handleClick,!1),e.addEventListener("contextmenu",this.handleRightClick,!1),e.addEventListener("mousedown",this.handleDown,!1),e.addEventListener("wheel",this.handleWheel,!1),e.addEventListener("mouseleave",this.handleLeave,!1),e.addEventListener("mouseenter",this.handleEnter,!1),document.addEventListener("mousemove",this.handleMove,!1),document.addEventListener("mouseup",this.handleUp,!1)}kill(){const e=this.container;e.removeEventListener("click",this.handleClick),e.removeEventListener("contextmenu",this.handleRightClick),e.removeEventListener("mousedown",this.handleDown),e.removeEventListener("wheel",this.handleWheel),e.removeEventListener("mouseleave",this.handleLeave),e.removeEventListener("mouseenter",this.handleEnter),document.removeEventListener("mousemove",this.handleMove),document.removeEventListener("mouseup",this.handleUp)}handleClick(e){if(this.enabled){if(this.clicks++,this.clicks===2)return this.clicks=0,typeof this.doubleClickTimeout=="number"&&(clearTimeout(this.doubleClickTimeout),this.doubleClickTimeout=null),this.handleDoubleClick(e);setTimeout(()=>{this.clicks=0,this.doubleClickTimeout=null},In),this.draggedEvents<kn&&this.emit("click",I(e,this.container))}}handleRightClick(e){this.enabled&&this.emit("rightClick",I(e,this.container))}handleDoubleClick(e){if(!this.enabled)return;e.preventDefault(),e.stopPropagation();const t=I(e,this.container);if(this.emit("doubleClick",t),t.sigmaDefaultPrevented)return;const i=this.renderer.getCamera(),r=i.getBoundedRatio(i.getState().ratio/$n);i.animate(this.renderer.getViewportZoomedState($(e,this.container),r),{easing:"quadraticInOut",duration:Pn})}handleDown(e){if(this.enabled){if(e.button===0){this.startCameraState=this.renderer.getCamera().getState();const{x:t,y:i}=$(e,this.container);this.lastMouseX=t,this.lastMouseY=i,this.draggedEvents=0,this.downStartTime=Date.now(),this.isMouseDown=!0}this.emit("mousedown",I(e,this.container))}}handleUp(e){if(!this.enabled||!this.isMouseDown)return;const t=this.renderer.getCamera();this.isMouseDown=!1,typeof this.movingTimeout=="number"&&(clearTimeout(this.movingTimeout),this.movingTimeout=null);const{x:i,y:r}=$(e,this.container),s=t.getState(),o=t.getPreviousState()||{x:0,y:0};this.isMoving?t.animate({x:s.x+We*(s.x-o.x),y:s.y+We*(s.y-o.y)},{duration:Fn,easing:"quadraticOut"}):(this.lastMouseX!==i||this.lastMouseY!==r)&&t.setState({x:s.x,y:s.y}),this.isMoving=!1,setTimeout(()=>{const a=this.draggedEvents>0;this.draggedEvents=0,a&&this.renderer.refresh()},0),this.emit("mouseup",I(e,this.container))}handleMove(e){if(!this.enabled)return;const t=I(e,this.container);if(this.emit("mousemovebody",t),e.target===this.container&&this.emit("mousemove",t),!t.sigmaDefaultPrevented&&this.isMouseDown){this.isMoving=!0,this.draggedEvents++,typeof this.movingTimeout=="number"&&clearTimeout(this.movingTimeout),this.movingTimeout=window.setTimeout(()=>{this.movingTimeout=null,this.isMoving=!1},Nn);const i=this.renderer.getCamera(),{x:r,y:s}=$(e,this.container),o=this.renderer.viewportToFramedGraph({x:this.lastMouseX,y:this.lastMouseY}),a=this.renderer.viewportToFramedGraph({x:r,y:s}),d=o.x-a.x,h=o.y-a.y,c=i.getState(),u=c.x+d,l=c.y+h;i.setState({x:u,y:l}),this.lastMouseX=r,this.lastMouseY=s,e.preventDefault(),e.stopPropagation()}}handleLeave(e){this.emit("mouseleave",I(e,this.container))}handleEnter(e){this.emit("mouseenter",I(e,this.container))}handleWheel(e){if(!this.enabled)return;e.preventDefault(),e.stopPropagation();const t=Pt(e);if(!t)return;const i=Dn(e,this.container);if(this.emit("wheel",i),i.sigmaDefaultPrevented)return;const r=t>0?1/je:je,s=this.renderer.getCamera(),o=s.getBoundedRatio(s.getState().ratio*r),a=t>0?1:-1,d=Date.now();this.currentWheelDirection===a&&this.lastWheelTriggerTime&&d-this.lastWheelTriggerTime<Ve/5||(s.animate(this.renderer.getViewportZoomedState($(e,this.container),o),{easing:"quadraticOut",duration:Ve},()=>{this.currentWheelDirection=0}),this.currentWheelDirection=a,this.lastWheelTriggerTime=d)}}const Un=200,Ye=3,zn=200;class On extends Mt{constructor(e,t){super(e,t),this.enabled=!0,this.isMoving=!1,this.hasMoved=!1,this.touchMode=0,this.startTouchesPositions=[],this.handleStart=this.handleStart.bind(this),this.handleLeave=this.handleLeave.bind(this),this.handleMove=this.handleMove.bind(this),e.addEventListener("touchstart",this.handleStart,!1),e.addEventListener("touchend",this.handleLeave,!1),e.addEventListener("touchcancel",this.handleLeave,!1),e.addEventListener("touchmove",this.handleMove,!1)}kill(){const e=this.container;e.removeEventListener("touchstart",this.handleStart),e.removeEventListener("touchend",this.handleLeave),e.removeEventListener("touchcancel",this.handleLeave),e.removeEventListener("touchmove",this.handleMove)}getDimensions(){return{width:this.container.offsetWidth,height:this.container.offsetHeight}}dispatchRelatedMouseEvent(e,t,i,r){const s=i||t.touches[0],o=new MouseEvent(e,{clientX:s.clientX,clientY:s.clientY,altKey:t.altKey,ctrlKey:t.ctrlKey});o.isFakeSigmaMouseEvent=!0,(r||this.container).dispatchEvent(o)}handleStart(e){if(!this.enabled)return;e.preventDefault(),e.touches.length===1&&this.dispatchRelatedMouseEvent("mousedown",e);const t=be(e.touches);if(this.touchMode=t.length,this.startCameraState=this.renderer.getCamera().getState(),this.startTouchesPositions=t.map(i=>$(i,this.container)),this.lastTouches=t,this.lastTouchesPositions=this.startTouchesPositions,this.touchMode===2){const[{x:i,y:r},{x:s,y:o}]=this.startTouchesPositions;this.startTouchesAngle=Math.atan2(o-r,s-i),this.startTouchesDistance=Math.sqrt(Math.pow(s-i,2)+Math.pow(o-r,2))}this.emit("touchdown",pe(e,this.container))}handleLeave(e){if(this.enabled){switch(e.preventDefault(),e.touches.length===0&&this.lastTouches&&this.lastTouches.length&&(this.dispatchRelatedMouseEvent("mouseup",e,this.lastTouches[0],document),this.hasMoved||this.dispatchRelatedMouseEvent("click",e,this.lastTouches[0])),this.movingTimeout&&(this.isMoving=!1,clearTimeout(this.movingTimeout)),this.touchMode){case 2:if(e.touches.length===1){this.handleStart(e),e.preventDefault();break}case 1:if(this.isMoving){const t=this.renderer.getCamera(),i=t.getState(),r=t.getPreviousState()||{x:0,y:0};t.animate({x:i.x+Ye*(i.x-r.x),y:i.y+Ye*(i.y-r.y)},{duration:zn,easing:"quadraticOut"})}this.hasMoved=!1,this.isMoving=!1,this.touchMode=0;break}this.emit("touchup",pe(e,this.container))}}handleMove(e){if(!this.enabled)return;e.preventDefault(),e.touches.length===1&&this.dispatchRelatedMouseEvent("mousemove",e);const t=be(e.touches),i=t.map(o=>$(o,this.container));if(this.lastTouches=t,this.lastTouchesPositions=i,this.hasMoved||(this.hasMoved=i.some((o,a)=>{const d=this.startTouchesPositions[a];return o.x!==d.x||o.y!==d.y})),!this.hasMoved)return;this.isMoving=!0,this.movingTimeout&&clearTimeout(this.movingTimeout),this.movingTimeout=window.setTimeout(()=>{this.isMoving=!1},Un);const r=this.renderer.getCamera(),s=this.startCameraState;switch(this.touchMode){case 1:{const{x:o,y:a}=this.renderer.viewportToFramedGraph((this.startTouchesPositions||[])[0]),{x:d,y:h}=this.renderer.viewportToFramedGraph(i[0]);r.setState({x:s.x+o-d,y:s.y+a-h});break}case 2:{const o={},{x:a,y:d}=i[0],{x:h,y:c}=i[1],u=Math.atan2(c-d,h-a)-this.startTouchesAngle,l=Math.hypot(c-d,h-a)/this.startTouchesDistance,f=r.getBoundedRatio(s.ratio/l);o.ratio=f,o.angle=s.angle+u;const g=this.getDimensions(),E=this.renderer.viewportToFramedGraph((this.startTouchesPositions||[])[0],{cameraState:s}),w=Math.min(g.width,g.height),y=w/g.width,v=w/g.height,x=f/w;let _=a-w/2/y,k=d-w/2/v;[_,k]=[_*Math.cos(-o.angle)-k*Math.sin(-o.angle),k*Math.cos(-o.angle)+_*Math.sin(-o.angle)],o.x=E.x-_*x,o.y=E.y+k*x,r.setState(o);break}}this.emit("touchmove",pe(e,this.container))}}class Ke{constructor(e,t){this.key=e,this.size=t}static compare(e,t){return e.size>t.size?-1:e.size<t.size||e.key>t.key?1:-1}}class Xe{constructor(){this.width=0,this.height=0,this.cellSize=0,this.columns=0,this.rows=0,this.cells={}}resizeAndClear(e,t){this.width=e.width,this.height=e.height,this.cellSize=t,this.columns=Math.ceil(e.width/t),this.rows=Math.ceil(e.height/t),this.cells={}}getIndex(e){const t=Math.floor(e.x/this.cellSize);return Math.floor(e.y/this.cellSize)*this.columns+t}add(e,t,i){const r=new Ke(e,t),s=this.getIndex(i);let o=this.cells[s];o||(o=[],this.cells[s]=o),o.push(r)}organize(){for(const e in this.cells)this.cells[e].sort(Ke.compare)}getLabelsToDisplay(e,t){const i=this.cellSize*this.cellSize,s=i/e/e*t/i,o=Math.ceil(s),a=[];for(const d in this.cells){const h=this.cells[d];for(let c=0;c<Math.min(o,h.length);c++)a.push(h[c].key)}return a}}function Bn(n){const{graph:e,hoveredNode:t,highlightedNodes:i,displayedNodeLabels:r}=n,s=[];return e.forEachEdge((o,a,d,h)=>{(d===t||h===t||i.has(d)||i.has(h)||r.has(d)&&r.has(h))&&s.push(o)}),s}function Hn(n){return n.normalized?1:n.size}function me(n){let e=0;return n.forEach(t=>e+=Hn(t)),e}function Ut(n,e,t){const i=n==="VERTEX"?e.VERTEX_SHADER:e.FRAGMENT_SHADER,r=e.createShader(i);if(r===null)throw new Error("loadShader: error while creating the shader");if(e.shaderSource(r,t),e.compileShader(r),!e.getShaderParameter(r,e.COMPILE_STATUS)){const o=e.getShaderInfoLog(r);throw e.deleteShader(r),new Error(`loadShader: error while compiling the shader:
${o}
${t}`)}return r}function Wn(n,e){return Ut("VERTEX",n,e)}function Vn(n,e){return Ut("FRAGMENT",n,e)}function jn(n,e){const t=n.createProgram();if(t===null)throw new Error("loadProgram: error while creating the program.");let i,r;for(i=0,r=e.length;i<r;i++)n.attachShader(t,e[i]);if(n.linkProgram(t),!n.getProgramParameter(t,n.LINK_STATUS))throw n.deleteProgram(t),new Error("loadProgram: error while linking the program.");return t}function qe({gl:n,buffer:e,program:t,vertexShader:i,fragmentShader:r}){n.deleteShader(i),n.deleteShader(r),n.deleteProgram(t),n.deleteBuffer(e)}function Tr(n){return n%1===0?n.toFixed(1):n.toString()}const Ze=`#define PICKING_MODE
`,Yn={[WebGL2RenderingContext.BOOL]:1,[WebGL2RenderingContext.BYTE]:1,[WebGL2RenderingContext.UNSIGNED_BYTE]:1,[WebGL2RenderingContext.SHORT]:2,[WebGL2RenderingContext.UNSIGNED_SHORT]:2,[WebGL2RenderingContext.INT]:4,[WebGL2RenderingContext.UNSIGNED_INT]:4,[WebGL2RenderingContext.FLOAT]:4};class zt{constructor(e,t,i){this.array=new Float32Array,this.constantArray=new Float32Array,this.capacity=0,this.verticesCount=0;const r=this.getDefinition();if(this.VERTICES=r.VERTICES,this.VERTEX_SHADER_SOURCE=r.VERTEX_SHADER_SOURCE,this.FRAGMENT_SHADER_SOURCE=r.FRAGMENT_SHADER_SOURCE,this.UNIFORMS=r.UNIFORMS,this.ATTRIBUTES=r.ATTRIBUTES,this.METHOD=r.METHOD,this.CONSTANT_ATTRIBUTES="CONSTANT_ATTRIBUTES"in r?r.CONSTANT_ATTRIBUTES:[],this.CONSTANT_DATA="CONSTANT_DATA"in r?r.CONSTANT_DATA:[],this.isInstanced="CONSTANT_ATTRIBUTES"in r,this.ATTRIBUTES_ITEMS_COUNT=me(this.ATTRIBUTES),this.STRIDE=this.VERTICES*this.ATTRIBUTES_ITEMS_COUNT,this.renderer=i,this.normalProgram=this.getProgramInfo("normal",e,r.VERTEX_SHADER_SOURCE,r.FRAGMENT_SHADER_SOURCE,null),this.pickProgram=t?this.getProgramInfo("pick",e,Ze+r.VERTEX_SHADER_SOURCE,Ze+r.FRAGMENT_SHADER_SOURCE,t):null,this.isInstanced){const s=me(this.CONSTANT_ATTRIBUTES);if(this.CONSTANT_DATA.length!==this.VERTICES)throw new Error(`Program: error while getting constant data (expected ${this.VERTICES} items, received ${this.CONSTANT_DATA.length} instead)`);this.constantArray=new Float32Array(this.CONSTANT_DATA.length*s);for(let o=0;o<this.CONSTANT_DATA.length;o++){const a=this.CONSTANT_DATA[o];if(a.length!==s)throw new Error(`Program: error while getting constant data (one vector has ${a.length} items instead of ${s})`);for(let d=0;d<a.length;d++)this.constantArray[o*s+d]=a[d]}this.STRIDE=this.ATTRIBUTES_ITEMS_COUNT}}kill(){qe(this.normalProgram),this.pickProgram&&(qe(this.pickProgram),this.pickProgram=null)}getProgramInfo(e,t,i,r,s){const o=this.getDefinition(),a=t.createBuffer();if(a===null)throw new Error("Program: error while creating the WebGL buffer.");const d=Wn(t,i),h=Vn(t,r),c=jn(t,[d,h]),u={};o.UNIFORMS.forEach(g=>{const E=t.getUniformLocation(c,g);E&&(u[g]=E)});const l={};o.ATTRIBUTES.forEach(g=>{l[g.name]=t.getAttribLocation(c,g.name)});let f;if("CONSTANT_ATTRIBUTES"in o&&(o.CONSTANT_ATTRIBUTES.forEach(g=>{l[g.name]=t.getAttribLocation(c,g.name)}),f=t.createBuffer(),f===null))throw new Error("Program: error while creating the WebGL constant buffer.");return{name:e,program:c,gl:t,frameBuffer:s,buffer:a,constantBuffer:f||{},uniformLocations:u,attributeLocations:l,isPicking:e==="pick",vertexShader:d,fragmentShader:h}}bindProgram(e){let t=0;const{gl:i,buffer:r}=e;this.isInstanced?(i.bindBuffer(i.ARRAY_BUFFER,e.constantBuffer),t=0,this.CONSTANT_ATTRIBUTES.forEach(s=>t+=this.bindAttribute(s,e,t,!1)),i.bufferData(i.ARRAY_BUFFER,this.constantArray,i.STATIC_DRAW),i.bindBuffer(i.ARRAY_BUFFER,e.buffer),t=0,this.ATTRIBUTES.forEach(s=>t+=this.bindAttribute(s,e,t,!0)),i.bufferData(i.ARRAY_BUFFER,this.array,i.DYNAMIC_DRAW)):(i.bindBuffer(i.ARRAY_BUFFER,r),t=0,this.ATTRIBUTES.forEach(s=>t+=this.bindAttribute(s,e,t)),i.bufferData(i.ARRAY_BUFFER,this.array,i.DYNAMIC_DRAW)),i.bindBuffer(i.ARRAY_BUFFER,null)}unbindProgram(e){this.isInstanced?(this.CONSTANT_ATTRIBUTES.forEach(t=>this.unbindAttribute(t,e,!1)),this.ATTRIBUTES.forEach(t=>this.unbindAttribute(t,e,!0))):this.ATTRIBUTES.forEach(t=>this.unbindAttribute(t,e))}bindAttribute(e,t,i,r){const s=Yn[e.type];if(typeof s!="number")throw new Error(`Program.bind: yet unsupported attribute type "${e.type}"`);const o=t.attributeLocations[e.name],a=t.gl;if(o!==-1){a.enableVertexAttribArray(o);const d=this.isInstanced?(r?this.ATTRIBUTES_ITEMS_COUNT:me(this.CONSTANT_ATTRIBUTES))*Float32Array.BYTES_PER_ELEMENT:this.ATTRIBUTES_ITEMS_COUNT*Float32Array.BYTES_PER_ELEMENT;if(a.vertexAttribPointer(o,e.size,e.type,e.normalized||!1,d,i),this.isInstanced&&r)if(a instanceof WebGL2RenderingContext)a.vertexAttribDivisor(o,1);else{const h=a.getExtension("ANGLE_instanced_arrays");h&&h.vertexAttribDivisorANGLE(o,1)}}return e.size*s}unbindAttribute(e,t,i){const r=t.attributeLocations[e.name],s=t.gl;if(r!==-1&&(s.disableVertexAttribArray(r),this.isInstanced&&i))if(s instanceof WebGL2RenderingContext)s.vertexAttribDivisor(r,0);else{const o=s.getExtension("ANGLE_instanced_arrays");o&&o.vertexAttribDivisorANGLE(r,0)}}reallocate(e){e!==this.capacity&&(this.capacity=e,this.verticesCount=this.VERTICES*e,this.array=new Float32Array(this.isInstanced?this.capacity*this.ATTRIBUTES_ITEMS_COUNT:this.verticesCount*this.ATTRIBUTES_ITEMS_COUNT))}hasNothingToRender(){return this.verticesCount===0}renderProgram(e,t){const{gl:i,program:r}=t;i.enable(i.BLEND),i.useProgram(r),this.setUniforms(e,t),this.drawWebGL(this.METHOD,t)}render(e){this.hasNothingToRender()||(this.pickProgram&&(this.pickProgram.gl.viewport(0,0,e.width*e.pixelRatio/e.downSizingRatio,e.height*e.pixelRatio/e.downSizingRatio),this.bindProgram(this.pickProgram),this.renderProgram({...e,pixelRatio:e.pixelRatio/e.downSizingRatio},this.pickProgram),this.unbindProgram(this.pickProgram)),this.normalProgram.gl.viewport(0,0,e.width*e.pixelRatio,e.height*e.pixelRatio),this.bindProgram(this.normalProgram),this.renderProgram(e,this.normalProgram),this.unbindProgram(this.normalProgram))}drawWebGL(e,{gl:t,frameBuffer:i}){if(t.bindFramebuffer(t.FRAMEBUFFER,i),!this.isInstanced)t.drawArrays(e,0,this.verticesCount);else if(t instanceof WebGL2RenderingContext)t.drawArraysInstanced(e,0,this.VERTICES,this.capacity);else{const r=t.getExtension("ANGLE_instanced_arrays");r&&r.drawArraysInstancedANGLE(e,0,this.VERTICES,this.capacity)}}}class Kn extends zt{kill(){super.kill()}process(e,t,i){let r=t*this.STRIDE;if(i.hidden){for(let s=r+this.STRIDE;r<s;r++)this.array[r]=0;return}return this.processVisibleItem($t(e),r,i)}}function Rr(n,e,t){return class{constructor(r,s,o){this.drawLabel=e,this.drawHover=t,this.programs=n.map(a=>new a(r,s,o))}reallocate(r){this.programs.forEach(s=>s.reallocate(r))}process(r,s,o){this.programs.forEach(a=>a.process(r,s,o))}render(r){this.programs.forEach(s=>s.render(r))}kill(){this.programs.forEach(r=>r.kill())}}}class Le extends zt{constructor(){super(...arguments),this.drawLabel=void 0}kill(){super.kill()}process(e,t,i,r,s){let o=t*this.STRIDE;if(s.hidden||i.hidden||r.hidden){for(let a=o+this.STRIDE;o<a;o++)this.array[o]=0;return}return this.processVisibleItem($t(e),o,i,r,s)}}function Xn(n,e){return class{constructor(i,r,s){this.drawLabel=e,this.programs=n.map(o=>new o(i,r,s))}reallocate(i){this.programs.forEach(r=>r.reallocate(i))}process(i,r,s,o,a){this.programs.forEach(d=>d.process(i,r,s,o,a))}render(i){this.programs.forEach(r=>r.render(i))}kill(){this.programs.forEach(i=>i.kill())}}}function qn(n,e,t,i,r){const s=r.edgeLabelSize,o=r.edgeLabelFont,a=r.edgeLabelWeight,d=r.edgeLabelColor.attribute?e[r.edgeLabelColor.attribute]||r.edgeLabelColor.color||"#000":r.edgeLabelColor.color;let h=e.label;if(!h)return;n.fillStyle=d,n.font=`${a} ${s}px ${o}`;const c=t.size,u=i.size;let l=t.x,f=t.y,g=i.x,E=i.y,w=(l+g)/2,y=(f+E)/2,v=g-l,x=E-f,_=Math.sqrt(v*v+x*x);if(_<c+u)return;l+=v*c/_,f+=x*c/_,g-=v*u/_,E-=x*u/_,w=(l+g)/2,y=(f+E)/2,v=g-l,x=E-f,_=Math.sqrt(v*v+x*x);let k=n.measureText(h).width;if(k>_){const De="…";for(h=h+De,k=n.measureText(h).width;k>_&&h.length>1;)h=h.slice(0,-2)+De,k=n.measureText(h).width;if(h.length<4)return}let X;v>0?x>0?X=Math.acos(v/_):X=Math.asin(x/_):x>0?X=Math.acos(v/_)+Math.PI:X=Math.asin(v/_)+Math.PI/2,n.save(),n.translate(w,y),n.rotate(X),n.fillText(h,-k/2,e.size/2+s),n.restore()}function Ot(n,e,t){if(!e.label)return;const i=t.labelSize,r=t.labelFont,s=t.labelWeight,o=t.labelColor.attribute?e[t.labelColor.attribute]||t.labelColor.color||"#000":t.labelColor.color;n.fillStyle=o,n.font=`${s} ${i}px ${r}`,n.fillText(e.label,e.x+e.size+3,e.y+i/3)}function Zn(n,e,t){const i=t.labelSize,r=t.labelFont,s=t.labelWeight;n.font=`${s} ${i}px ${r}`,n.fillStyle="#FFF",n.shadowOffsetX=0,n.shadowOffsetY=0,n.shadowBlur=8,n.shadowColor="#000";const o=2;if(typeof e.label=="string"){const a=n.measureText(e.label).width,d=Math.round(a+5),h=Math.round(i+2*o),c=Math.max(e.size,i/2)+o,u=Math.asin(h/2/c),l=Math.sqrt(Math.abs(Math.pow(c,2)-Math.pow(h/2,2)));n.beginPath(),n.moveTo(e.x+l,e.y+h/2),n.lineTo(e.x+c+d,e.y+h/2),n.lineTo(e.x+c+d,e.y-h/2),n.lineTo(e.x+l,e.y-h/2),n.arc(e.x,e.y,c,u,-u),n.closePath(),n.fill()}else n.beginPath(),n.arc(e.x,e.y,e.size+o,0,Math.PI*2),n.closePath(),n.fill();n.shadowOffsetX=0,n.shadowOffsetY=0,n.shadowBlur=0,Ot(n,e,t)}const Jn=`
precision highp float;

varying vec4 v_color;
varying vec2 v_diffVector;
varying float v_radius;

uniform float u_correctionRatio;

const vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);

void main(void) {
  float border = u_correctionRatio * 2.0;
  float dist = length(v_diffVector) - v_radius + border;

  // No antialiasing for picking mode:
  #ifdef PICKING_MODE
  if (dist > border)
    gl_FragColor = transparent;
  else
    gl_FragColor = v_color;

  #else
  float t = 0.0;
  if (dist > border)
    t = 1.0;
  else if (dist > 0.0)
    t = dist / border;

  gl_FragColor = mix(v_color, transparent, t);
  #endif
}
`,Qn=`
attribute vec4 a_id;
attribute vec4 a_color;
attribute vec2 a_position;
attribute float a_size;
attribute float a_angle;

uniform mat3 u_matrix;
uniform float u_sizeRatio;
uniform float u_correctionRatio;

varying vec4 v_color;
varying vec2 v_diffVector;
varying float v_radius;
varying float v_border;

const float bias = 255.0 / 254.0;

void main() {
  float size = a_size * u_correctionRatio / u_sizeRatio * 4.0;
  vec2 diffVector = size * vec2(cos(a_angle), sin(a_angle));
  vec2 position = a_position + diffVector;
  gl_Position = vec4(
    (u_matrix * vec3(position, 1)).xy,
    0,
    1
  );

  v_diffVector = diffVector;
  v_radius = size / 2.0;

  #ifdef PICKING_MODE
  // For picking mode, we use the ID as the color:
  v_color = a_id;
  #else
  // For normal mode, we use the color:
  v_color = a_color;
  #endif

  v_color.a *= bias;
}
`,{UNSIGNED_BYTE:Je,FLOAT:ye}=WebGLRenderingContext,er=["u_sizeRatio","u_correctionRatio","u_matrix"],O=class O extends Kn{getDefinition(){return{VERTICES:3,VERTEX_SHADER_SOURCE:Qn,FRAGMENT_SHADER_SOURCE:Jn,METHOD:WebGLRenderingContext.TRIANGLES,UNIFORMS:er,ATTRIBUTES:[{name:"a_position",size:2,type:ye},{name:"a_size",size:1,type:ye},{name:"a_color",size:4,type:Je,normalized:!0},{name:"a_id",size:4,type:Je,normalized:!0}],CONSTANT_ATTRIBUTES:[{name:"a_angle",size:1,type:ye}],CONSTANT_DATA:[[O.ANGLE_1],[O.ANGLE_2],[O.ANGLE_3]]}}processVisibleItem(e,t,i){const r=this.array,s=K(i.color);r[t++]=i.x,r[t++]=i.y,r[t++]=i.size,r[t++]=s,r[t++]=e}setUniforms(e,{gl:t,uniformLocations:i}){const{u_sizeRatio:r,u_correctionRatio:s,u_matrix:o}=i;t.uniform1f(s,e.correctionRatio),t.uniform1f(r,e.sizeRatio),t.uniformMatrix3fv(o,!1,e.matrix)}};O.ANGLE_1=0,O.ANGLE_2=2*Math.PI/3,O.ANGLE_3=4*Math.PI/3;let Ee=O;const tr=`
precision mediump float;

varying vec4 v_color;

void main(void) {
  gl_FragColor = v_color;
}
`,ir=tr,nr=`
attribute vec2 a_position;
attribute vec2 a_normal;
attribute float a_radius;
attribute vec3 a_barycentric;

#ifdef PICKING_MODE
attribute vec4 a_id;
#else
attribute vec4 a_color;
#endif

uniform mat3 u_matrix;
uniform float u_sizeRatio;
uniform float u_correctionRatio;
uniform float u_minEdgeThickness;
uniform float u_lengthToThicknessRatio;
uniform float u_widenessToThicknessRatio;

varying vec4 v_color;

const float bias = 255.0 / 254.0;

void main() {
  float minThickness = u_minEdgeThickness;

  float normalLength = length(a_normal);
  vec2 unitNormal = a_normal / normalLength;

  // These first computations are taken from edge.vert.glsl and
  // edge.clamped.vert.glsl. Please read it to get better comments on what's
  // happening:
  float pixelsThickness = max(normalLength / u_sizeRatio, minThickness);
  float webGLThickness = pixelsThickness * u_correctionRatio;
  float webGLNodeRadius = a_radius * 2.0 * u_correctionRatio / u_sizeRatio;
  float webGLArrowHeadLength = webGLThickness * u_lengthToThicknessRatio * 2.0;
  float webGLArrowHeadThickness = webGLThickness * u_widenessToThicknessRatio;

  float da = a_barycentric.x;
  float db = a_barycentric.y;
  float dc = a_barycentric.z;

  vec2 delta = vec2(
      da * (webGLNodeRadius * unitNormal.y)
    + db * ((webGLNodeRadius + webGLArrowHeadLength) * unitNormal.y + webGLArrowHeadThickness * unitNormal.x)
    + dc * ((webGLNodeRadius + webGLArrowHeadLength) * unitNormal.y - webGLArrowHeadThickness * unitNormal.x),

      da * (-webGLNodeRadius * unitNormal.x)
    + db * (-(webGLNodeRadius + webGLArrowHeadLength) * unitNormal.x + webGLArrowHeadThickness * unitNormal.y)
    + dc * (-(webGLNodeRadius + webGLArrowHeadLength) * unitNormal.x - webGLArrowHeadThickness * unitNormal.y)
  );

  vec2 position = (u_matrix * vec3(a_position + delta, 1)).xy;

  gl_Position = vec4(position, 0, 1);

  #ifdef PICKING_MODE
  // For picking mode, we use the ID as the color:
  v_color = a_id;
  #else
  // For normal mode, we use the color:
  v_color = a_color;
  #endif

  v_color.a *= bias;
}
`,rr=nr,{UNSIGNED_BYTE:Qe,FLOAT:re}=WebGLRenderingContext,sr=["u_matrix","u_sizeRatio","u_correctionRatio","u_minEdgeThickness","u_lengthToThicknessRatio","u_widenessToThicknessRatio"],Bt={lengthToThicknessRatio:2.5,widenessToThicknessRatio:2};function Ht(n){const e={...Bt,...n||{}};return class extends Le{getDefinition(){return{VERTICES:3,VERTEX_SHADER_SOURCE:rr,FRAGMENT_SHADER_SOURCE:ir,METHOD:WebGLRenderingContext.TRIANGLES,UNIFORMS:sr,ATTRIBUTES:[{name:"a_position",size:2,type:re},{name:"a_normal",size:2,type:re},{name:"a_radius",size:1,type:re},{name:"a_color",size:4,type:Qe,normalized:!0},{name:"a_id",size:4,type:Qe,normalized:!0}],CONSTANT_ATTRIBUTES:[{name:"a_barycentric",size:3,type:re}],CONSTANT_DATA:[[1,0,0],[0,1,0],[0,0,1]]}}processVisibleItem(i,r,s,o,a){const d=a.size||1,h=o.size||1,c=s.x,u=s.y,l=o.x,f=o.y,g=K(a.color),E=l-c,w=f-u;let y=E*E+w*w,v=0,x=0;y&&(y=1/Math.sqrt(y),v=-w*y*d,x=E*y*d);const _=this.array;_[r++]=l,_[r++]=f,_[r++]=-v,_[r++]=-x,_[r++]=h,_[r++]=g,_[r++]=i}setUniforms(i,{gl:r,uniformLocations:s}){const{u_matrix:o,u_sizeRatio:a,u_correctionRatio:d,u_minEdgeThickness:h,u_lengthToThicknessRatio:c,u_widenessToThicknessRatio:u}=s;r.uniformMatrix3fv(o,!1,i.matrix),r.uniform1f(a,i.sizeRatio),r.uniform1f(d,i.correctionRatio),r.uniform1f(h,i.minEdgeThickness),r.uniform1f(c,e.lengthToThicknessRatio),r.uniform1f(u,e.widenessToThicknessRatio)}}}Ht();const Wt=`
precision mediump float;

varying vec4 v_color;
varying vec2 v_normal;
varying float v_thickness;
varying float v_feather;

const vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);

void main(void) {
  // We only handle antialiasing for normal mode:
  #ifdef PICKING_MODE
  gl_FragColor = v_color;
  #else
  float dist = length(v_normal) * v_thickness;

  float t = smoothstep(
    v_thickness - v_feather,
    v_thickness,
    dist
  );

  gl_FragColor = mix(v_color, transparent, t);
  #endif
}
`,or=`
attribute vec4 a_id;
attribute vec4 a_color;
attribute vec2 a_normal;
attribute float a_normalCoef;
attribute vec2 a_positionStart;
attribute vec2 a_positionEnd;
attribute float a_positionCoef;
attribute float a_radius;
attribute float a_radiusCoef;

uniform mat3 u_matrix;
uniform float u_zoomRatio;
uniform float u_sizeRatio;
uniform float u_pixelRatio;
uniform float u_correctionRatio;
uniform float u_minEdgeThickness;
uniform float u_lengthToThicknessRatio;
uniform float u_feather;

varying vec4 v_color;
varying vec2 v_normal;
varying float v_thickness;
varying float v_feather;

const float bias = 255.0 / 254.0;

void main() {
  float minThickness = u_minEdgeThickness;

  float radius = a_radius * a_radiusCoef;
  vec2 normal = a_normal * a_normalCoef;
  vec2 position = a_positionStart * (1.0 - a_positionCoef) + a_positionEnd * a_positionCoef;

  float normalLength = length(normal);
  vec2 unitNormal = normal / normalLength;

  // These first computations are taken from edge.vert.glsl. Please read it to
  // get better comments on what's happening:
  float pixelsThickness = max(normalLength, minThickness * u_sizeRatio);
  float webGLThickness = pixelsThickness * u_correctionRatio / u_sizeRatio;

  // Here, we move the point to leave space for the arrow head:
  float direction = sign(radius);
  float webGLNodeRadius = direction * radius * 2.0 * u_correctionRatio / u_sizeRatio;
  float webGLArrowHeadLength = webGLThickness * u_lengthToThicknessRatio * 2.0;

  vec2 compensationVector = vec2(-direction * unitNormal.y, direction * unitNormal.x) * (webGLNodeRadius + webGLArrowHeadLength);

  // Here is the proper position of the vertex
  gl_Position = vec4((u_matrix * vec3(position + unitNormal * webGLThickness + compensationVector, 1)).xy, 0, 1);

  v_thickness = webGLThickness / u_zoomRatio;

  v_normal = unitNormal;

  v_feather = u_feather * u_correctionRatio / u_zoomRatio / u_pixelRatio * 2.0;

  #ifdef PICKING_MODE
  // For picking mode, we use the ID as the color:
  v_color = a_id;
  #else
  // For normal mode, we use the color:
  v_color = a_color;
  #endif

  v_color.a *= bias;
}
`,ar=or,{UNSIGNED_BYTE:et,FLOAT:B}=WebGLRenderingContext,hr=["u_matrix","u_zoomRatio","u_sizeRatio","u_correctionRatio","u_pixelRatio","u_feather","u_minEdgeThickness","u_lengthToThicknessRatio"],dr={lengthToThicknessRatio:Bt.lengthToThicknessRatio};function Vt(n){const e={...dr,...n||{}};return class extends Le{getDefinition(){return{VERTICES:6,VERTEX_SHADER_SOURCE:ar,FRAGMENT_SHADER_SOURCE:Wt,METHOD:WebGLRenderingContext.TRIANGLES,UNIFORMS:hr,ATTRIBUTES:[{name:"a_positionStart",size:2,type:B},{name:"a_positionEnd",size:2,type:B},{name:"a_normal",size:2,type:B},{name:"a_color",size:4,type:et,normalized:!0},{name:"a_id",size:4,type:et,normalized:!0},{name:"a_radius",size:1,type:B}],CONSTANT_ATTRIBUTES:[{name:"a_positionCoef",size:1,type:B},{name:"a_normalCoef",size:1,type:B},{name:"a_radiusCoef",size:1,type:B}],CONSTANT_DATA:[[0,1,0],[0,-1,0],[1,1,1],[1,1,1],[0,-1,0],[1,-1,-1]]}}processVisibleItem(i,r,s,o,a){const d=a.size||1,h=s.x,c=s.y,u=o.x,l=o.y,f=K(a.color),g=u-h,E=l-c,w=o.size||1;let y=g*g+E*E,v=0,x=0;y&&(y=1/Math.sqrt(y),v=-E*y*d,x=g*y*d);const _=this.array;_[r++]=h,_[r++]=c,_[r++]=u,_[r++]=l,_[r++]=v,_[r++]=x,_[r++]=f,_[r++]=i,_[r++]=w}setUniforms(i,{gl:r,uniformLocations:s}){const{u_matrix:o,u_zoomRatio:a,u_feather:d,u_pixelRatio:h,u_correctionRatio:c,u_sizeRatio:u,u_minEdgeThickness:l,u_lengthToThicknessRatio:f}=s;r.uniformMatrix3fv(o,!1,i.matrix),r.uniform1f(a,i.zoomRatio),r.uniform1f(u,i.sizeRatio),r.uniform1f(c,i.correctionRatio),r.uniform1f(h,i.pixelRatio),r.uniform1f(d,i.antiAliasingFeather),r.uniform1f(l,i.minEdgeThickness),r.uniform1f(f,e.lengthToThicknessRatio)}}}Vt();function cr(n){return Xn([Vt(n),Ht(n)])}const ur=cr(),lr=ur,fr=`
attribute vec4 a_id;
attribute vec4 a_color;
attribute vec2 a_normal;
attribute float a_normalCoef;
attribute vec2 a_positionStart;
attribute vec2 a_positionEnd;
attribute float a_positionCoef;

uniform mat3 u_matrix;
uniform float u_sizeRatio;
uniform float u_zoomRatio;
uniform float u_pixelRatio;
uniform float u_correctionRatio;
uniform float u_minEdgeThickness;
uniform float u_feather;

varying vec4 v_color;
varying vec2 v_normal;
varying float v_thickness;
varying float v_feather;

const float bias = 255.0 / 254.0;

void main() {
  float minThickness = u_minEdgeThickness;

  vec2 normal = a_normal * a_normalCoef;
  vec2 position = a_positionStart * (1.0 - a_positionCoef) + a_positionEnd * a_positionCoef;

  float normalLength = length(normal);
  vec2 unitNormal = normal / normalLength;

  // We require edges to be at least "minThickness" pixels thick *on screen*
  // (so we need to compensate the size ratio):
  float pixelsThickness = max(normalLength, minThickness * u_sizeRatio);

  // Then, we need to retrieve the normalized thickness of the edge in the WebGL
  // referential (in a ([0, 1], [0, 1]) space), using our "magic" correction
  // ratio:
  float webGLThickness = pixelsThickness * u_correctionRatio / u_sizeRatio;

  // Here is the proper position of the vertex
  gl_Position = vec4((u_matrix * vec3(position + unitNormal * webGLThickness, 1)).xy, 0, 1);

  // For the fragment shader though, we need a thickness that takes the "magic"
  // correction ratio into account (as in webGLThickness), but so that the
  // antialiasing effect does not depend on the zoom level. So here's yet
  // another thickness version:
  v_thickness = webGLThickness / u_zoomRatio;

  v_normal = unitNormal;

  v_feather = u_feather * u_correctionRatio / u_zoomRatio / u_pixelRatio * 2.0;

  #ifdef PICKING_MODE
  // For picking mode, we use the ID as the color:
  v_color = a_id;
  #else
  // For normal mode, we use the color:
  v_color = a_color;
  #endif

  v_color.a *= bias;
}
`,{UNSIGNED_BYTE:tt,FLOAT:Q}=WebGLRenderingContext,gr=["u_matrix","u_zoomRatio","u_sizeRatio","u_correctionRatio","u_pixelRatio","u_feather","u_minEdgeThickness"];class pr extends Le{getDefinition(){return{VERTICES:6,VERTEX_SHADER_SOURCE:fr,FRAGMENT_SHADER_SOURCE:Wt,METHOD:WebGLRenderingContext.TRIANGLES,UNIFORMS:gr,ATTRIBUTES:[{name:"a_positionStart",size:2,type:Q},{name:"a_positionEnd",size:2,type:Q},{name:"a_normal",size:2,type:Q},{name:"a_color",size:4,type:tt,normalized:!0},{name:"a_id",size:4,type:tt,normalized:!0}],CONSTANT_ATTRIBUTES:[{name:"a_positionCoef",size:1,type:Q},{name:"a_normalCoef",size:1,type:Q}],CONSTANT_DATA:[[0,1],[0,-1],[1,1],[1,1],[0,-1],[1,-1]]}}processVisibleItem(e,t,i,r,s){const o=s.size||1,a=i.x,d=i.y,h=r.x,c=r.y,u=K(s.color),l=h-a,f=c-d;let g=l*l+f*f,E=0,w=0;g&&(g=1/Math.sqrt(g),E=-f*g*o,w=l*g*o);const y=this.array;y[t++]=a,y[t++]=d,y[t++]=h,y[t++]=c,y[t++]=E,y[t++]=w,y[t++]=u,y[t++]=e}setUniforms(e,{gl:t,uniformLocations:i}){const{u_matrix:r,u_zoomRatio:s,u_feather:o,u_pixelRatio:a,u_correctionRatio:d,u_sizeRatio:h,u_minEdgeThickness:c}=i;t.uniformMatrix3fv(r,!1,e.matrix),t.uniform1f(s,e.zoomRatio),t.uniform1f(h,e.sizeRatio),t.uniform1f(d,e.correctionRatio),t.uniform1f(a,e.pixelRatio),t.uniform1f(o,e.antiAliasingFeather),t.uniform1f(c,e.minEdgeThickness)}}const mr={hideEdgesOnMove:!1,hideLabelsOnMove:!1,renderLabels:!0,renderEdgeLabels:!1,enableEdgeEvents:!1,defaultNodeColor:"#999",defaultNodeType:"circle",defaultEdgeColor:"#ccc",defaultEdgeType:"line",labelFont:"Arial",labelSize:14,labelWeight:"normal",labelColor:{color:"#000"},edgeLabelFont:"Arial",edgeLabelSize:14,edgeLabelWeight:"normal",edgeLabelColor:{attribute:"color"},stagePadding:30,zoomToSizeRatioFunction:Math.sqrt,itemSizesReference:"screen",defaultDrawEdgeLabel:qn,defaultDrawNodeLabel:Ot,defaultDrawNodeHover:Zn,minEdgeThickness:1.7,antiAliasingFeather:1,labelDensity:1,labelGridCellSize:100,labelRenderedSizeThreshold:6,nodeReducer:null,edgeReducer:null,zIndex:!1,minCameraRatio:null,maxCameraRatio:null,allowInvalidContainer:!1,nodeProgramClasses:{},nodeHoverProgramClasses:{},edgeProgramClasses:{}},yr={circle:Ee},wr={arrow:lr,line:pr};function it(n){if(typeof n.labelDensity!="number"||n.labelDensity<0)throw new Error("Settings: invalid `labelDensity`. Expecting a positive number.");const{minCameraRatio:e,maxCameraRatio:t}=n;if(typeof e=="number"&&typeof t=="number"&&t<e)throw new Error("Settings: invalid camera ratio boundaries. Expecting `maxCameraRatio` to be greater than `minCameraRatio`.")}function br(n){const e=ge({},mr,n);return e.nodeProgramClasses=ge({},yr,e.nodeProgramClasses),e.edgeProgramClasses=ge({},wr,e.edgeProgramClasses),e}const nt=150,rt=50,P=Object.prototype.hasOwnProperty;function Er(n,e,t){if(!P.call(t,"x")||!P.call(t,"y"))throw new Error(`Sigma: could not find a valid position (x, y) for node "${e}". All your nodes must have a number "x" and "y". Maybe your forgot to apply a layout or your "nodeReducer" is not returning the correct data?`);return t.color||(t.color=n.defaultNodeColor),!t.label&&t.label!==""&&(t.label=null),t.label!==void 0&&t.label!==null?t.label=""+t.label:t.label=null,t.size||(t.size=2),P.call(t,"hidden")||(t.hidden=!1),P.call(t,"highlighted")||(t.highlighted=!1),P.call(t,"forceLabel")||(t.forceLabel=!1),(!t.type||t.type==="")&&(t.type=n.defaultNodeType),t.zIndex||(t.zIndex=0),t}function vr(n,e,t){return t.color||(t.color=n.defaultEdgeColor),t.label||(t.label=""),t.size||(t.size=.5),P.call(t,"hidden")||(t.hidden=!1),P.call(t,"forceLabel")||(t.forceLabel=!1),(!t.type||t.type==="")&&(t.type=n.defaultEdgeType),t.zIndex||(t.zIndex=0),t}class Gr extends Se{constructor(e,t,i={}){if(super(),this.elements={},this.canvasContexts={},this.webGLContexts={},this.pickingLayers=new Set,this.textures={},this.frameBuffers={},this.activeListeners={},this.labelGrid=new Xe,this.nodeDataCache={},this.edgeDataCache={},this.nodeProgramIndex={},this.edgeProgramIndex={},this.nodesWithForcedLabels=new Set,this.edgesWithForcedLabels=new Set,this.nodeExtent={x:[0,1],y:[0,1]},this.nodeZExtent=[1/0,-1/0],this.edgeZExtent=[1/0,-1/0],this.matrix=N(),this.invMatrix=N(),this.correctionRatio=1,this.customBBox=null,this.normalizationFunction=He({x:[0,1],y:[0,1]}),this.graphToViewportRatio=1,this.itemIDsIndex={},this.nodeIndices={},this.edgeIndices={},this.width=0,this.height=0,this.pixelRatio=Oe(),this.pickingDownSizingRatio=2*this.pixelRatio,this.displayedNodeLabels=new Set,this.displayedEdgeLabels=new Set,this.highlightedNodes=new Set,this.hoveredNode=null,this.hoveredEdge=null,this.renderFrame=null,this.renderHighlightedNodesFrame=null,this.needToProcess=!1,this.checkEdgesEventsFrame=null,this.nodePrograms={},this.nodeHoverPrograms={},this.edgePrograms={},this.settings=br(i),it(this.settings),Sn(e),!(t instanceof HTMLElement))throw new Error("Sigma: container should be an html element.");this.graph=e,this.container=t,this.createWebGLContext("edges",{picking:i.enableEdgeEvents}),this.createCanvasContext("edgeLabels"),this.createWebGLContext("nodes",{picking:!0}),this.createCanvasContext("labels"),this.createCanvasContext("hovers"),this.createWebGLContext("hoverNodes"),this.createCanvasContext("mouse"),this.resize();for(const r in this.settings.nodeProgramClasses)this.registerNodeProgram(r,this.settings.nodeProgramClasses[r],this.settings.nodeHoverProgramClasses[r]);for(const r in this.settings.edgeProgramClasses)this.registerEdgeProgram(r,this.settings.edgeProgramClasses[r]);this.camera=new ee,this.bindCameraHandlers(),this.mouseCaptor=new Mn(this.elements.mouse,this),this.touchCaptor=new On(this.elements.mouse,this),this.bindEventHandlers(),this.bindGraphHandlers(),this.handleSettingsUpdate(),this.refresh()}createCanvas(e){const t=Ln("canvas",{position:"absolute"},{class:`sigma-${e}`});return this.elements[e]=t,this.container.appendChild(t),t}createCanvasContext(e){const t=this.createCanvas(e),i={preserveDrawingBuffer:!1,antialias:!1};return this.canvasContexts[e]=t.getContext("2d",i),this}registerNodeProgram(e,t,i){return this.nodePrograms[e]&&this.nodePrograms[e].kill(),this.nodeHoverPrograms[e]&&this.nodeHoverPrograms[e].kill(),this.nodePrograms[e]=new t(this.webGLContexts.nodes,this.frameBuffers.nodes,this),this.nodeHoverPrograms[e]=new(i||t)(this.webGLContexts.hoverNodes,null,this),this}registerEdgeProgram(e,t){return this.edgePrograms[e]&&this.edgePrograms[e].kill(),this.edgePrograms[e]=new t(this.webGLContexts.edges,this.frameBuffers.edges,this),this}unregisterNodeProgram(e){if(this.nodePrograms[e]){const{[e]:t,...i}=this.nodePrograms;t.kill(),this.nodePrograms=i}if(this.nodeHoverPrograms[e]){const{[e]:t,...i}=this.nodeHoverPrograms;t.kill(),this.nodePrograms=i}return this}unregisterEdgeProgram(e){if(this.edgePrograms[e]){const{[e]:t,...i}=this.edgePrograms;t.kill(),this.edgePrograms=i}return this}createWebGLContext(e,t){const i=this.createCanvas(e);t!=null&&t.hidden&&i.remove();const r={preserveDrawingBuffer:!1,antialias:!1,...t||{}};let s;s=i.getContext("webgl2",r),s||(s=i.getContext("webgl",r)),s||(s=i.getContext("experimental-webgl",r));const o=s;if(this.webGLContexts[e]=o,o.blendFunc(o.ONE,o.ONE_MINUS_SRC_ALPHA),t!=null&&t.picking){this.pickingLayers.add(e);const a=o.createFramebuffer();if(!a)throw new Error(`Sigma: cannot create a new frame buffer for layer ${e}`);this.frameBuffers[e]=a}return this}resetWebGLTexture(e){const t=this.webGLContexts[e],i=this.frameBuffers[e],r=this.textures[e];r&&t.deleteTexture(r);const s=t.createTexture();return t.bindFramebuffer(t.FRAMEBUFFER,i),t.bindTexture(t.TEXTURE_2D,s),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,this.width,this.height,0,t.RGBA,t.UNSIGNED_BYTE,null),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,s,0),this.textures[e]=s,this}bindCameraHandlers(){return this.activeListeners.camera=()=>{this.scheduleRender()},this.camera.on("updated",this.activeListeners.camera),this}unbindCameraHandlers(){return this.camera.removeListener("updated",this.activeListeners.camera),this}getNodeAtPosition(e){const{x:t,y:i}=e,r=Pe(this.webGLContexts.nodes,this.frameBuffers.nodes,t,i,this.pixelRatio,this.pickingDownSizingRatio),s=$e(...r),o=this.itemIDsIndex[s];return o&&o.type==="node"?o.id:null}bindEventHandlers(){this.activeListeners.handleResize=()=>{this.scheduleRefresh()},window.addEventListener("resize",this.activeListeners.handleResize),this.activeListeners.handleMove=t=>{const i={event:t,preventSigmaDefault(){t.preventSigmaDefault()}},r=this.getNodeAtPosition(t);if(r&&this.hoveredNode!==r&&!this.nodeDataCache[r].hidden){this.hoveredNode&&this.emit("leaveNode",{...i,node:this.hoveredNode}),this.hoveredNode=r,this.emit("enterNode",{...i,node:r}),this.scheduleHighlightedNodesRender();return}if(this.hoveredNode&&this.getNodeAtPosition(t)!==this.hoveredNode){const s=this.hoveredNode;this.hoveredNode=null,this.emit("leaveNode",{...i,node:s}),this.scheduleHighlightedNodesRender();return}if(this.settings.enableEdgeEvents){const s=this.hoveredNode?null:this.getEdgeAtPoint(i.event.x,i.event.y);s!==this.hoveredEdge&&(this.hoveredEdge&&this.emit("leaveEdge",{...i,edge:this.hoveredEdge}),s&&this.emit("enterEdge",{...i,edge:s}),this.hoveredEdge=s)}},this.activeListeners.handleLeave=t=>{const i={event:t,preventSigmaDefault(){t.preventSigmaDefault()}};this.hoveredNode&&(this.emit("leaveNode",{...i,node:this.hoveredNode}),this.scheduleHighlightedNodesRender()),this.settings.enableEdgeEvents&&this.hoveredEdge&&(this.emit("leaveEdge",{...i,edge:this.hoveredEdge}),this.scheduleHighlightedNodesRender()),this.emit("leaveStage",{...i})},this.activeListeners.handleEnter=t=>{const i={event:t,preventSigmaDefault(){t.preventSigmaDefault()}};this.emit("enterStage",{...i})};const e=t=>i=>{const r={event:i,preventSigmaDefault(){i.preventSigmaDefault()}},o=i.original.isFakeSigmaMouseEvent?this.getNodeAtPosition(i):this.hoveredNode;if(o)return this.emit(`${t}Node`,{...r,node:o});if(this.settings.enableEdgeEvents){const a=this.getEdgeAtPoint(i.x,i.y);if(a)return this.emit(`${t}Edge`,{...r,edge:a})}return this.emit(`${t}Stage`,r)};return this.activeListeners.handleClick=e("click"),this.activeListeners.handleRightClick=e("rightClick"),this.activeListeners.handleDoubleClick=e("doubleClick"),this.activeListeners.handleWheel=e("wheel"),this.activeListeners.handleDown=e("down"),this.activeListeners.handleUp=e("up"),this.mouseCaptor.on("mousemove",this.activeListeners.handleMove),this.mouseCaptor.on("click",this.activeListeners.handleClick),this.mouseCaptor.on("rightClick",this.activeListeners.handleRightClick),this.mouseCaptor.on("doubleClick",this.activeListeners.handleDoubleClick),this.mouseCaptor.on("wheel",this.activeListeners.handleWheel),this.mouseCaptor.on("mousedown",this.activeListeners.handleDown),this.mouseCaptor.on("mouseup",this.activeListeners.handleUp),this.mouseCaptor.on("mouseleave",this.activeListeners.handleLeave),this.mouseCaptor.on("mouseenter",this.activeListeners.handleEnter),this}bindGraphHandlers(){const e=this.graph,t=new Set(["x","y","zIndex","type"]);return this.activeListeners.eachNodeAttributesUpdatedGraphUpdate=i=>{var o;const r=(o=i.hints)==null?void 0:o.attributes;this.graph.forEachNode(a=>this.updateNode(a));const s=!r||r.some(a=>t.has(a));this.refresh({partialGraph:{nodes:e.nodes()},skipIndexation:!s,schedule:!0})},this.activeListeners.eachEdgeAttributesUpdatedGraphUpdate=i=>{var o;const r=(o=i.hints)==null?void 0:o.attributes;this.graph.forEachEdge(a=>this.updateEdge(a));const s=r&&["zIndex","type"].some(a=>r==null?void 0:r.includes(a));this.refresh({partialGraph:{edges:e.edges()},skipIndexation:!s,schedule:!0})},this.activeListeners.addNodeGraphUpdate=i=>{const r=i.key;this.addNode(r),this.refresh({partialGraph:{nodes:[r]},skipIndexation:!1,schedule:!0})},this.activeListeners.updateNodeGraphUpdate=i=>{const r=i.key;this.refresh({partialGraph:{nodes:[r]},skipIndexation:!1,schedule:!0})},this.activeListeners.dropNodeGraphUpdate=i=>{const r=i.key;this.removeNode(r),this.refresh({schedule:!0})},this.activeListeners.addEdgeGraphUpdate=i=>{const r=i.key;this.addEdge(r),this.refresh({partialGraph:{edges:[r]},schedule:!0})},this.activeListeners.updateEdgeGraphUpdate=i=>{const r=i.key;this.refresh({partialGraph:{edges:[r]},skipIndexation:!1,schedule:!0})},this.activeListeners.dropEdgeGraphUpdate=i=>{const r=i.key;this.removeEdge(r),this.refresh({schedule:!0})},this.activeListeners.clearEdgesGraphUpdate=()=>{this.clearEdgeState(),this.clearEdgeIndices(),this.refresh({schedule:!0})},this.activeListeners.clearGraphUpdate=()=>{this.clearEdgeState(),this.clearNodeState(),this.clearEdgeIndices(),this.clearNodeIndices(),this.refresh({schedule:!0})},e.on("nodeAdded",this.activeListeners.addNodeGraphUpdate),e.on("nodeDropped",this.activeListeners.dropNodeGraphUpdate),e.on("nodeAttributesUpdated",this.activeListeners.updateNodeGraphUpdate),e.on("eachNodeAttributesUpdated",this.activeListeners.eachNodeAttributesUpdatedGraphUpdate),e.on("edgeAdded",this.activeListeners.addEdgeGraphUpdate),e.on("edgeDropped",this.activeListeners.dropEdgeGraphUpdate),e.on("edgeAttributesUpdated",this.activeListeners.updateEdgeGraphUpdate),e.on("eachEdgeAttributesUpdated",this.activeListeners.eachEdgeAttributesUpdatedGraphUpdate),e.on("edgesCleared",this.activeListeners.clearEdgesGraphUpdate),e.on("cleared",this.activeListeners.clearGraphUpdate),this}unbindGraphHandlers(){const e=this.graph;e.removeListener("nodeAdded",this.activeListeners.addNodeGraphUpdate),e.removeListener("nodeDropped",this.activeListeners.dropNodeGraphUpdate),e.removeListener("nodeAttributesUpdated",this.activeListeners.updateNodeGraphUpdate),e.removeListener("eachNodeAttributesUpdated",this.activeListeners.eachNodeAttributesUpdatedGraphUpdate),e.removeListener("edgeAdded",this.activeListeners.addEdgeGraphUpdate),e.removeListener("edgeDropped",this.activeListeners.dropEdgeGraphUpdate),e.removeListener("edgeAttributesUpdated",this.activeListeners.updateEdgeGraphUpdate),e.removeListener("eachEdgeAttributesUpdated",this.activeListeners.eachEdgeAttributesUpdatedGraphUpdate),e.removeListener("edgesCleared",this.activeListeners.clearEdgesGraphUpdate),e.removeListener("cleared",this.activeListeners.clearGraphUpdate)}getEdgeAtPoint(e,t){const i=Pe(this.webGLContexts.edges,this.frameBuffers.edges,e,t,this.pixelRatio,this.pickingDownSizingRatio),r=$e(...i),s=this.itemIDsIndex[r];return s&&s.type==="edge"?s.id:null}process(){const e=this.graph,t=this.settings,i=this.getDimensions();this.nodeExtent=Rn(this.graph),this.normalizationFunction=He(this.customBBox||this.nodeExtent);const r=new ee,s=J(r.getState(),i,this.getGraphDimensions(),this.getSetting("stagePadding")||0);this.labelGrid.resizeAndClear(i,t.labelGridCellSize);const o={},a={},d={},h={};let c=1,u=e.nodes();for(let g=0,E=u.length;g<E;g++){const w=u[g],y=this.nodeDataCache[w],v=e.getNodeAttributes(w);y.x=v.x,y.y=v.y,this.normalizationFunction.applyTo(y),typeof y.label=="string"&&!y.hidden&&this.labelGrid.add(w,y.size,this.framedGraphToViewport(y,{matrix:s})),o[y.type]=(o[y.type]||0)+1}this.labelGrid.organize();for(const g in this.nodePrograms){if(!P.call(this.nodePrograms,g))throw new Error(`Sigma: could not find a suitable program for node type "${g}"!`);this.nodePrograms[g].reallocate(o[g]||0),o[g]=0}this.settings.zIndex&&this.nodeZExtent[0]!==this.nodeZExtent[1]&&(u=Be(this.nodeZExtent,g=>this.nodeDataCache[g].zIndex,u));for(let g=0,E=u.length;g<E;g++){const w=u[g];a[w]=c,h[a[w]]={type:"node",id:w},c++;const y=this.nodeDataCache[w];this.addNodeToProgram(w,a[w],o[y.type]++)}const l={};let f=e.edges();for(let g=0,E=f.length;g<E;g++){const w=f[g],y=this.edgeDataCache[w];l[y.type]=(l[y.type]||0)+1}this.settings.zIndex&&this.edgeZExtent[0]!==this.edgeZExtent[1]&&(f=Be(this.edgeZExtent,g=>this.edgeDataCache[g].zIndex,f));for(const g in this.edgePrograms){if(!P.call(this.edgePrograms,g))throw new Error(`Sigma: could not find a suitable program for edge type "${g}"!`);this.edgePrograms[g].reallocate(l[g]||0),l[g]=0}for(let g=0,E=f.length;g<E;g++){const w=f[g];d[w]=c,h[d[w]]={type:"edge",id:w},c++;const y=this.edgeDataCache[w];this.addEdgeToProgram(w,d[w],l[y.type]++)}return this.itemIDsIndex=h,this.nodeIndices=a,this.edgeIndices=d,this}handleSettingsUpdate(e){const t=this.settings;if(this.camera.minRatio=t.minCameraRatio,this.camera.maxRatio=t.maxCameraRatio,this.camera.setState(this.camera.validateState(this.camera.getState())),e){if(e.edgeProgramClasses!==t.edgeProgramClasses){for(const i in t.edgeProgramClasses)t.edgeProgramClasses[i]!==e.edgeProgramClasses[i]&&this.registerEdgeProgram(i,t.edgeProgramClasses[i]);for(const i in e.edgeProgramClasses)t.edgeProgramClasses[i]||this.unregisterEdgeProgram(i)}if(e.nodeProgramClasses!==t.nodeProgramClasses||e.nodeHoverProgramClasses!==t.nodeHoverProgramClasses){for(const i in t.nodeProgramClasses)(t.nodeProgramClasses[i]!==e.nodeProgramClasses[i]||t.nodeHoverProgramClasses[i]!==e.nodeHoverProgramClasses[i])&&this.registerNodeProgram(i,t.nodeProgramClasses[i],t.nodeHoverProgramClasses[i]);for(const i in e.nodeProgramClasses)t.nodeProgramClasses[i]||this.unregisterNodeProgram(i)}}return this}renderLabels(){if(!this.settings.renderLabels)return this;const e=this.camera.getState(),t=this.labelGrid.getLabelsToDisplay(e.ratio,this.settings.labelDensity);ze(t,this.nodesWithForcedLabels),this.displayedNodeLabels=new Set;const i=this.canvasContexts.labels;for(let r=0,s=t.length;r<s;r++){const o=t[r],a=this.nodeDataCache[o];if(this.displayedNodeLabels.has(o)||a.hidden)continue;const{x:d,y:h}=this.framedGraphToViewport(a),c=this.scaleSize(a.size);if(!a.forceLabel&&c<this.settings.labelRenderedSizeThreshold||d<-nt||d>this.width+nt||h<-rt||h>this.height+rt)continue;this.displayedNodeLabels.add(o);const{defaultDrawNodeLabel:u}=this.settings,l=this.nodePrograms[a.type];((l==null?void 0:l.drawLabel)||u)(i,{key:o,...a,size:c,x:d,y:h},this.settings)}return this}renderEdgeLabels(){if(!this.settings.renderEdgeLabels)return this;const e=this.canvasContexts.edgeLabels;e.clearRect(0,0,this.width,this.height);const t=Bn({graph:this.graph,hoveredNode:this.hoveredNode,displayedNodeLabels:this.displayedNodeLabels,highlightedNodes:this.highlightedNodes});ze(t,this.edgesWithForcedLabels);const i=new Set;for(let r=0,s=t.length;r<s;r++){const o=t[r],a=this.graph.extremities(o),d=this.nodeDataCache[a[0]],h=this.nodeDataCache[a[1]],c=this.edgeDataCache[o];if(i.has(o)||c.hidden||d.hidden||h.hidden)continue;const{defaultDrawEdgeLabel:u}=this.settings,l=this.edgePrograms[c.type];((l==null?void 0:l.drawLabel)||u)(e,{key:o,...c,size:this.scaleSize(c.size)},{key:a[0],...d,...this.framedGraphToViewport(d),size:this.scaleSize(d.size)},{key:a[1],...h,...this.framedGraphToViewport(h),size:this.scaleSize(h.size)},this.settings),i.add(o)}return this.displayedEdgeLabels=i,this}renderHighlightedNodes(){const e=this.canvasContexts.hovers;e.clearRect(0,0,this.width,this.height);const t=s=>{const o=this.nodeDataCache[s],{x:a,y:d}=this.framedGraphToViewport(o),h=this.scaleSize(o.size),{defaultDrawNodeHover:c}=this.settings,u=this.nodePrograms[o.type];((u==null?void 0:u.drawHover)||c)(e,{key:s,...o,size:h,x:a,y:d},this.settings)},i=[];this.hoveredNode&&!this.nodeDataCache[this.hoveredNode].hidden&&i.push(this.hoveredNode),this.highlightedNodes.forEach(s=>{s!==this.hoveredNode&&i.push(s)}),i.forEach(s=>t(s));const r={};i.forEach(s=>{const o=this.nodeDataCache[s].type;r[o]=(r[o]||0)+1});for(const s in this.nodeHoverPrograms)this.nodeHoverPrograms[s].reallocate(r[s]||0),r[s]=0;i.forEach(s=>{const o=this.nodeDataCache[s];this.nodeHoverPrograms[o.type].process(0,r[o.type]++,o)}),this.webGLContexts.hoverNodes.clear(this.webGLContexts.hoverNodes.COLOR_BUFFER_BIT);for(const s in this.nodeHoverPrograms)this.nodeHoverPrograms[s].render({matrix:this.matrix,width:this.width,height:this.height,pixelRatio:this.pixelRatio,cameraAngle:this.camera.angle,zoomRatio:this.camera.ratio,sizeRatio:1/this.scaleSize(),correctionRatio:this.correctionRatio,downSizingRatio:this.pickingDownSizingRatio,minEdgeThickness:this.settings.minEdgeThickness,antiAliasingFeather:this.settings.antiAliasingFeather})}scheduleHighlightedNodesRender(){this.renderHighlightedNodesFrame||this.renderFrame||(this.renderHighlightedNodesFrame=requestAnimationFrame(()=>{this.renderHighlightedNodesFrame=null,this.renderHighlightedNodes(),this.renderEdgeLabels()}))}render(){this.emit("beforeRender");const e=()=>(this.emit("afterRender"),this);if(this.renderFrame&&(cancelAnimationFrame(this.renderFrame),this.renderFrame=null),this.resize(),this.needToProcess&&this.process(),this.needToProcess=!1,this.clear(),this.pickingLayers.forEach(h=>this.resetWebGLTexture(h)),!this.graph.order)return e();const t=this.mouseCaptor,i=this.camera.isAnimated()||t.isMoving||t.draggedEvents||t.currentWheelDirection,r=this.camera.getState(),s=this.getDimensions(),o=this.getGraphDimensions(),a=this.getSetting("stagePadding")||0;this.matrix=J(r,s,o,a),this.invMatrix=J(r,s,o,a,!0),this.correctionRatio=An(this.matrix,r,s),this.graphToViewportRatio=this.getGraphToViewportRatio();const d={matrix:this.matrix,width:this.width,height:this.height,pixelRatio:this.pixelRatio,zoomRatio:this.camera.ratio,cameraAngle:this.camera.angle,sizeRatio:1/this.scaleSize(),correctionRatio:this.correctionRatio,downSizingRatio:this.pickingDownSizingRatio,minEdgeThickness:this.settings.minEdgeThickness,antiAliasingFeather:this.settings.antiAliasingFeather};for(const h in this.nodePrograms)this.nodePrograms[h].render(d);if(!this.settings.hideEdgesOnMove||!i)for(const h in this.edgePrograms)this.edgePrograms[h].render(d);return this.settings.hideLabelsOnMove&&i||(this.renderLabels(),this.renderEdgeLabels(),this.renderHighlightedNodes()),e()}addNode(e){let t=Object.assign({},this.graph.getNodeAttributes(e));this.settings.nodeReducer&&(t=this.settings.nodeReducer(e,t));const i=Er(this.settings,e,t);this.nodeDataCache[e]=i,this.nodesWithForcedLabels.delete(e),i.forceLabel&&!i.hidden&&this.nodesWithForcedLabels.add(e),this.highlightedNodes.delete(e),i.highlighted&&!i.hidden&&this.highlightedNodes.add(e),this.settings.zIndex&&(i.zIndex<this.nodeZExtent[0]&&(this.nodeZExtent[0]=i.zIndex),i.zIndex>this.nodeZExtent[1]&&(this.nodeZExtent[1]=i.zIndex))}updateNode(e){this.addNode(e);const t=this.nodeDataCache[e];this.normalizationFunction.applyTo(t)}removeNode(e){delete this.nodeDataCache[e],delete this.nodeProgramIndex[e],this.highlightedNodes.delete(e),this.hoveredNode===e&&(this.hoveredNode=null),this.nodesWithForcedLabels.delete(e)}addEdge(e){let t=Object.assign({},this.graph.getEdgeAttributes(e));this.settings.edgeReducer&&(t=this.settings.edgeReducer(e,t));const i=vr(this.settings,e,t);this.edgeDataCache[e]=i,this.edgesWithForcedLabels.delete(e),i.forceLabel&&!i.hidden&&this.edgesWithForcedLabels.add(e),this.settings.zIndex&&(i.zIndex<this.edgeZExtent[0]&&(this.edgeZExtent[0]=i.zIndex),i.zIndex>this.edgeZExtent[1]&&(this.edgeZExtent[1]=i.zIndex))}updateEdge(e){this.addEdge(e)}removeEdge(e){delete this.edgeDataCache[e],delete this.edgeProgramIndex[e],this.hoveredEdge===e&&(this.hoveredEdge=null),this.edgesWithForcedLabels.delete(e)}clearNodeIndices(){this.labelGrid=new Xe,this.nodeExtent={x:[0,1],y:[0,1]},this.nodeDataCache={},this.edgeProgramIndex={},this.nodesWithForcedLabels=new Set,this.nodeZExtent=[1/0,-1/0]}clearEdgeIndices(){this.edgeDataCache={},this.edgeProgramIndex={},this.edgesWithForcedLabels=new Set,this.edgeZExtent=[1/0,-1/0]}clearIndices(){this.clearEdgeIndices(),this.clearNodeIndices()}clearNodeState(){this.displayedNodeLabels=new Set,this.highlightedNodes=new Set,this.hoveredNode=null}clearEdgeState(){this.displayedEdgeLabels=new Set,this.highlightedNodes=new Set,this.hoveredEdge=null}clearState(){this.clearEdgeState(),this.clearNodeState()}addNodeToProgram(e,t,i){const r=this.nodeDataCache[e],s=this.nodePrograms[r.type];if(!s)throw new Error(`Sigma: could not find a suitable program for node type "${r.type}"!`);s.process(t,i,r),this.nodeProgramIndex[e]=i}addEdgeToProgram(e,t,i){const r=this.edgeDataCache[e],s=this.edgePrograms[r.type];if(!s)throw new Error(`Sigma: could not find a suitable program for edge type "${r.type}"!`);const o=this.graph.extremities(e),a=this.nodeDataCache[o[0]],d=this.nodeDataCache[o[1]];s.process(t,i,a,d,r),this.edgeProgramIndex[e]=i}getCamera(){return this.camera}setCamera(e){this.unbindCameraHandlers(),this.camera=e,this.bindCameraHandlers()}getContainer(){return this.container}getGraph(){return this.graph}setGraph(e){e!==this.graph&&(this.unbindGraphHandlers(),this.checkEdgesEventsFrame!==null&&(cancelAnimationFrame(this.checkEdgesEventsFrame),this.checkEdgesEventsFrame=null),this.graph=e,this.bindGraphHandlers(),this.refresh())}getMouseCaptor(){return this.mouseCaptor}getTouchCaptor(){return this.touchCaptor}getDimensions(){return{width:this.width,height:this.height}}getGraphDimensions(){const e=this.customBBox||this.nodeExtent;return{width:e.x[1]-e.x[0]||1,height:e.y[1]-e.y[0]||1}}getNodeDisplayData(e){const t=this.nodeDataCache[e];return t?Object.assign({},t):void 0}getEdgeDisplayData(e){const t=this.edgeDataCache[e];return t?Object.assign({},t):void 0}getNodeDisplayedLabels(){return new Set(this.displayedNodeLabels)}getEdgeDisplayedLabels(){return new Set(this.displayedEdgeLabels)}getSettings(){return{...this.settings}}getSetting(e){return this.settings[e]}setSetting(e,t){const i={...this.settings};return this.settings[e]=t,it(this.settings),this.handleSettingsUpdate(i),this.scheduleRefresh(),this}updateSetting(e,t){return this.setSetting(e,t(this.settings[e])),this}resize(){const e=this.width,t=this.height;if(this.width=this.container.offsetWidth,this.height=this.container.offsetHeight,this.pixelRatio=Oe(),this.width===0)if(this.settings.allowInvalidContainer)this.width=1;else throw new Error("Sigma: Container has no width. You can set the allowInvalidContainer setting to true to stop seeing this error.");if(this.height===0)if(this.settings.allowInvalidContainer)this.height=1;else throw new Error("Sigma: Container has no height. You can set the allowInvalidContainer setting to true to stop seeing this error.");if(e===this.width&&t===this.height)return this;this.emit("resize");for(const i in this.elements){const r=this.elements[i];r.style.width=this.width+"px",r.style.height=this.height+"px"}for(const i in this.canvasContexts)this.elements[i].setAttribute("width",this.width*this.pixelRatio+"px"),this.elements[i].setAttribute("height",this.height*this.pixelRatio+"px"),this.pixelRatio!==1&&this.canvasContexts[i].scale(this.pixelRatio,this.pixelRatio);for(const i in this.webGLContexts){this.elements[i].setAttribute("width",this.width*this.pixelRatio+"px"),this.elements[i].setAttribute("height",this.height*this.pixelRatio+"px");const r=this.webGLContexts[i];if(r.viewport(0,0,this.width*this.pixelRatio,this.height*this.pixelRatio),this.pickingLayers.has(i)){const s=this.textures[i];s&&r.deleteTexture(s)}}return this}clear(){return this.webGLContexts.nodes.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER,null),this.webGLContexts.nodes.clear(WebGLRenderingContext.COLOR_BUFFER_BIT),this.webGLContexts.edges.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER,null),this.webGLContexts.edges.clear(WebGLRenderingContext.COLOR_BUFFER_BIT),this.webGLContexts.hoverNodes.clear(WebGLRenderingContext.COLOR_BUFFER_BIT),this.canvasContexts.labels.clearRect(0,0,this.width,this.height),this.canvasContexts.hovers.clearRect(0,0,this.width,this.height),this.canvasContexts.edgeLabels.clearRect(0,0,this.width,this.height),this}refresh(e){var s,o;const t=(e==null?void 0:e.skipIndexation)!==void 0?e==null?void 0:e.skipIndexation:!1,i=(e==null?void 0:e.schedule)!==void 0?e.schedule:!1,r=!e||!e.partialGraph;if(r)this.clearEdgeIndices(),this.clearNodeIndices(),this.graph.forEachNode(a=>this.addNode(a)),this.graph.forEachEdge(a=>this.addEdge(a));else{const a=((s=e.partialGraph)==null?void 0:s.nodes)||[];for(let h=0,c=(a==null?void 0:a.length)||0;h<c;h++){const u=a[h];if(this.updateNode(u),t){const l=this.nodeProgramIndex[u];if(l===void 0)throw new Error(`Sigma: node "${u}" can't be repaint`);this.addNodeToProgram(u,this.nodeIndices[u],l)}}const d=((o=e==null?void 0:e.partialGraph)==null?void 0:o.edges)||[];for(let h=0,c=d.length;h<c;h++){const u=d[h];if(this.updateEdge(u),t){const l=this.edgeProgramIndex[u];if(l===void 0)throw new Error(`Sigma: edge "${u}" can't be repaint`);this.addEdgeToProgram(u,this.edgeIndices[u],l)}}}return(r||!t)&&(this.needToProcess=!0),i?this.scheduleRender():this.render(),this}scheduleRender(){return this.renderFrame||(this.renderFrame=requestAnimationFrame(()=>{this.render()})),this}scheduleRefresh(e){return this.refresh({...e,schedule:!0})}getViewportZoomedState(e,t){const{ratio:i,angle:r,x:s,y:o}=this.camera.getState(),a=t/i,d={x:this.width/2,y:this.height/2},h=this.viewportToFramedGraph(e),c=this.viewportToFramedGraph(d);return{angle:r,x:(h.x-c.x)*(1-a)+s,y:(h.y-c.y)*(1-a)+o,ratio:t}}viewRectangle(){const e=0*this.width/8,t=0*this.height/8,i=this.viewportToFramedGraph({x:0-e,y:0-t}),r=this.viewportToFramedGraph({x:this.width+e,y:0-t}),s=this.viewportToFramedGraph({x:0,y:this.height+t});return{x1:i.x,y1:i.y,x2:r.x,y2:r.y,height:r.y-s.y}}framedGraphToViewport(e,t={}){const i=!!t.cameraState||!!t.viewportDimensions||!!t.graphDimensions,r=t.matrix?t.matrix:i?J(t.cameraState||this.camera.getState(),t.viewportDimensions||this.getDimensions(),t.graphDimensions||this.getGraphDimensions(),t.padding||this.getSetting("stagePadding")||0):this.matrix,s=we(r,e);return{x:(1+s.x)*this.width/2,y:(1-s.y)*this.height/2}}viewportToFramedGraph(e,t={}){const i=!!t.cameraState||!!t.viewportDimensions||!t.graphDimensions,r=t.matrix?t.matrix:i?J(t.cameraState||this.camera.getState(),t.viewportDimensions||this.getDimensions(),t.graphDimensions||this.getGraphDimensions(),t.padding||this.getSetting("stagePadding")||0,!0):this.invMatrix,s=we(r,{x:e.x/this.width*2-1,y:1-e.y/this.height*2});return isNaN(s.x)&&(s.x=0),isNaN(s.y)&&(s.y=0),s}viewportToGraph(e,t={}){return this.normalizationFunction.inverse(this.viewportToFramedGraph(e,t))}graphToViewport(e,t={}){return this.framedGraphToViewport(this.normalizationFunction(e),t)}getGraphToViewportRatio(){const e={x:0,y:0},t={x:1,y:1},i=Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2)),r=this.graphToViewport(e),s=this.graphToViewport(t);return Math.sqrt(Math.pow(r.x-s.x,2)+Math.pow(r.y-s.y,2))/i}getBBox(){return this.nodeExtent}getCustomBBox(){return this.customBBox}setCustomBBox(e){return this.customBBox=e,this.scheduleRender(),this}kill(){var t;this.emit("kill"),this.removeAllListeners(),this.unbindCameraHandlers(),window.removeEventListener("resize",this.activeListeners.handleResize),this.mouseCaptor.kill(),this.touchCaptor.kill(),this.unbindGraphHandlers(),this.clearIndices(),this.clearState(),this.nodeDataCache={},this.edgeDataCache={},this.highlightedNodes.clear(),this.renderFrame&&(cancelAnimationFrame(this.renderFrame),this.renderFrame=null),this.renderHighlightedNodesFrame&&(cancelAnimationFrame(this.renderHighlightedNodesFrame),this.renderHighlightedNodesFrame=null);for(const i in this.webGLContexts)(t=this.webGLContexts[i].getExtension("WEBGL_lose_context"))==null||t.loseContext();const e=this.container;for(;e.firstChild;)e.removeChild(e.firstChild);this.canvasContexts={},this.webGLContexts={},this.elements={};for(const i in this.nodePrograms)this.nodePrograms[i].kill();for(const i in this.nodeHoverPrograms)this.nodeHoverPrograms[i].kill();for(const i in this.edgePrograms)this.edgePrograms[i].kill();this.nodePrograms={},this.nodeHoverPrograms={},this.edgePrograms={}}scaleSize(e=1,t=this.camera.ratio){return e/this.settings.zoomToSizeRatioFunction(t)*(this.getSetting("itemSizesReference")==="positions"?t*this.graphToViewportRatio:1)}getCanvases(){return{...this.elements}}}function Nr(n){const e=document.getElementById("storybook-root");e&&new MutationObserver((i,r)=>{n(),r.disconnect()}).observe(e,{childList:!0})}export{yr as D,Le as E,T as G,St as M,Kn as N,Gr as S,xr as a,Rr as b,Ar as c,Bt as d,ft as e,K as f,lr as g,Ee as h,Tn as i,pr as j,Tr as n,Nr as o};
